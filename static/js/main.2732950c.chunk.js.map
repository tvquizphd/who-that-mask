{"version":3,"sources":["containers/App.module.css","containers/Output.module.css","functions/Async.js","containers/OutputLine.js","functions/ConstUpdaters.js","containers/Output.js","containers/UrlOutput.js","containers/SobelFilter.js","containers/DexOutput.js","functions/Colors.js","containers/App.js","index.js"],"names":["module","exports","debounceAsync","fn","t","debounced","debounce","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_len","args","_key","_this","_args","arguments","wrap","_context","prev","next","length","Array","Promise","resolve","reject","apply","then","result","catch","err","abrupt","sent","stop","sleepAsync","_ref2","_callee2","ms","_context2","setTimeout","_x","OutputLine","_Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","key","value","nextProps","nextState","canRender","clientWidth","_this$props","this","props","id","enqueueLineUpdate","_this$props2","cls","stl","text","line","map","_ref","char","join","_jsx","style","className","ref","el","width","getBoundingClientRect","checkWidth","children","Component","constMapInsert","a","i","v","Map","concat","_toConsumableArray","constListReplace","_v","_i","TextException","message","name","makeNewLine","numRenders","elWidthDiff","elWidth","undefined","makeNewLines","num","keys","readLastChar","lineState","slice","copyWidthMap","widthMap","has","Math","abs","maxRound","round","max","minRound","min","minFloor","floor","sameFloor","v0","v1","takeRatios","params","widthRatio","heightRatio","lineIdx","maxLines","indexLabel","label","offset","Output","_this$props$readMaskS","call","readMaskShape","_this$props$readMaskS2","_slicedToArray","w","h","_window","window","innerWidth","innerHeight","idealWidth","initialHeight","lines","state","fontSize","lineHeight","idealHeight","maxWidth","maxHeight","updateShape","bind","_assertThisInitialized","resetLines","addCharsToLine","addCharToLine","lineQueue","_this$props$readMaskS3","_this$props$readMaskS4","_this$state","_this$state2","output","height","ratio_width","ratio_height","_objectSpread","getShape","_ref$offset","_ref$char","_ref$art","art","increment","getLabel","_maxRange$reduce","reduce","off","done","prior","sumWidth","offWidth","get","_this2","alignment","getNextOffsetByColumn","getNextOffset","newChar","newLine","getMaxLines","_this$getRatios","getRatios","maskWidth","_this3","artKernels","Object","console","error","_readMaskShape","_readMaskShape2","maskHeight","lineRatio","artWidthMap","getArtCharWidths","_takeRatios","x","y","boundArtChar","_readMask","input","readMaskPixel","readArtPixel","_input$artCharBounder","artChar","checkRatios","artCharBounder","getNextChar","_addCharToLine","hiddenChars","nextChar","iMax","charWidth","nextWidth","readMask","some","_x2","_x3","_addCharsToLine","_callee4","numRange","_this4","_context4","canLineRender","_ref4","_callee3","_context3","t0","t1","t2","_x7","_x8","allReady","_x4","_x5","_x6","_this5","l0","split","_this6","_ref5","_callee6","_context6","_ref6","_callee5","l","_context5","t3","_x10","_x11","_x12","getArtCharBounder","listHiddenChars","setState","_x9","_this7","_this7$state","updateLine","_this8","_callee7","_context7","onLineUpdate","_updateShape","_callee9","newState","oldShape","_this$state3","_window2","_this9","_context9","_callee8","_this9$getShape","numLines","_context8","_resetLines","_callee10","_readMaskShape3","_readMaskShape4","_this10","_context10","_componentDidMount","_callee12","_this11","_context12","addEventListener","_callee11","_context11","onColumnUpdate","_componentDidUpdate","_callee13","_context13","_this12","p","_this13","_this$state4","_this$getShape6","outlineStyle","centerStyle","outline","styles","lineStyle","top","_jsxs","grid","UrlOutput","missing","space","stepSize","SobelImageException","source","SEC","SobelFilter","pos","image_pos","image_size","canvasRef","React","createRef","program","buffer","initWebgl","readPixels","_initWebgl","_yield$Promise$all","_yield$Promise$all2","vert","frag","gl","canvas","viewport","all","fetch","vertex","fragment","toProgram","initBuffers","fileMap","createProgram","validate","verb","noun","object","step_status","get_log","forEach","shader","createShader","shaderSource","compileShader","attachShader","linkProgram","useProgram","Float32Array","getUniformLocation","uniform2f","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","bitdepth","BYTES_PER_ELEMENT","getAttribLocation","FLOAT","VEC2","enableVertexAttribArray","vertexAttribPointer","locateVertices","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","createTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","tex","texImage2D","RGBA","UNSIGNED_BYTE","TEXTURE_WRAP_T","CLAMP_TO_EDGE","TEXTURE_WRAP_S","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","texParameteri","drawArrays","TRIANGLE_STRIP","_readPixels","pixels","Uint8Array","drawWebgl","every","_readAllPixels","current","getContext","prevProps","fatalError","GENERATIONS","palindromeIndex","_ref3","maxCenter","oldSize","newSize","weigh","evenFloor","midFloor","sideFloor","sideLen","excess","ok","arg","allWhole","SpriteException","sideRange","sort","b","sign","oldRange","_excessRange$reduce","out","index","nextValue","rightCounts","midCount","remaining","leftCounts","_","allCounts","final","countIdx","countRange","scaleArtKernel","sources","sourceIdxList","quad","wideNear","idx","len","wideFar","wideTween","rescale","iy","ix","counts","count","set","mode","mode_count","modeOrMax","si","iyTween","ixTween","iyNear","ixNear","iyFar","ixFar","parseArtPixel","pixelBuffer","i4","_pixelBuffer$slice","_pixelBuffer$slice2","_rgb2hsv","r","g","minRGB","maxRGB","alert","rgb2hsv","_rgb2hsv2","s","parseLangList","list","property","langMap","lang","language","parseGeneration","generation","roman","toLowerCase","indexOf","Pokemon","_params$generation","names","genera","varieties","nameLangMap","genusLangMap","hasGenderDiff","has_gender_differences","hasGender","gender_rate","_varieties$reduce","variety","pokemon","is_default","vDefault","vMap","sprites","varietyMap","varietyDefault","sprite","url","splitLabel","_splitLabel","side","gender","includes","spriteData","entries","_ref8","_ref9","k0","l1","_ref10","_ref11","k1","l2","_ref12","_ref13","k2","v2","newSpriteList","_ref14","_ref15","_ref16","_ref17","l3","_ref18","_ref19","k3","v3","sortChoices","items","choices","_items$slice$map","item","choiceIndex","_items$slice$map2","_len2","ab","_key2","_functions","diff","getSprites","spriteIndex","setSprites","getSprite","spriteImage","Image","crossOrigin","onload","document","createElement","drawImage","onerror","src","data","getImageData","makeEmptyPokemon","returnValidNameOrNumber","n","nNumber","alt","parseInt","isNaN","parseAbsoluteInteger","NaN","isZero","DexException","DexOutput","todoRef","sobelRef","artKernels3x3","artKernels5x5","tinyArtKernels","kernels","size","scaleToSize","artBuffer","maxArtKernel","dex","Pokedex","ctx","loadPokemon","pokemonOrNameOrNumber","spriteCall","_ref23","isSameSpecies","_ref24","isSameVariety","_ref25","_loadPokemonSpecies","nameOrNumber","getPokemonSpeciesByName","_ref26","_loadPokemonSprites","getPokemonByName","parseSpriteData","_loadPokemonSprite","isSameSprite","loadSprite","_loadPokemon","validVariety","_args8","loadPokemonSpecies","loadPokemonSprites","t4","t5","loadPokemonSprite","t6","setSprite","setSpeciesName","getName","setSpeciesIndex","_accessArtBuffer","_ref30","sobelFilter","rowRange","smallBuffer","readAllPixels","start","end","_ref32","center","new_size","new_shape","_readArtPixelColumns","_ref33","pixelRange","accessArtBuffer","cols","col","pixel","values","_readArtPixel","artPixelBounds","pixelColumns","charCounts","charRatios","charWeights","defaultWeight","_$$$$$_$$","resizeArtPixelBounds","charMap","wMax","_ref7","readArtPixelColumns","total","column","_ref34","_ref35","kernel","log","_step","_iterator","_createForOfIteratorHelper","kernel_row","JSON","stringify","e","f","_ref36","_ref37","_ref38","_ref38$","reverse","weightMax","weight","clearRect","fillStyle","fillRect","_x13","_ref39","_ref40","readSpriteMaskPixel","_ref41","_ref42","toLocaleLowerCase","_this$spriteCall3","_ref43","href","parseAnyString","useQuery","parsers","query","URLSearchParams","useLocation","search","parser","configureProps","parseBoolean","slug","navigation","formatDexLink","RenderOutput","lastPokemon","_useState","useState","_useState2","speciesIndex","_useState3","_useState4","speciesName","config","header","nullPokemon","prefix","nextIndex","flex_row","Link","to","randomIndex","ceil","random","padded_header","row","n898","flex_column","dexIndex","dexLink","App","Router","basename","process","Switch","Route","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2732950c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"n898\":\"App_n898__24EbZ\",\"flex_row\":\"App_flex_row__1Y8r1\",\"flex_column\":\"App_flex_column__3fFxP\",\"padded_header\":\"App_padded_header__18P3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outline\":\"Output_outline__30pg-\",\"line\":\"Output_line__3suFW\",\"grid\":\"Output_grid__2lwKT\"};","import debounce from 'debounce-async'; \n\nconst debounceAsync = (fn, t) => {\n  const debounced = debounce(fn, t);\n  return async function(...args) {\n    return await new Promise((resolve, reject)=>{\n      debounced.apply(this, args)\n        .then((result)=>{resolve(result)})\n        .catch(err => {\n          if (err !== 'canceled') {\n            reject(err);\n          }\n          resolve(null);\n        });\n    });\n  }\n}\n\nconst sleepAsync = async (ms) => {\n  await new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport {\n  debounceAsync,\n  sleepAsync\n};\n","import React, { Component } from 'react';\n\nclass OutputLine extends Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {canRender} = nextProps;\n    return canRender;\n  }\n\n  checkWidth(clientWidth) {\n    const {id, enqueueLineUpdate} = this.props;\n    enqueueLineUpdate(id, clientWidth);\n  }\n\n  render() {\n    const {cls, stl} = this.props;\n    const {line} = this.props;\n    const text = line.map(({char}) => {\n      if (char === ' ') {\n        return ' ';\n      }\n      return char;\n    }).join('') + '\\n';\n\n    return (\n      <div style={stl} className={cls}\n        ref={(el) => {\n          if (el) {\n            const {width} = el.getBoundingClientRect();\n            this.checkWidth(width);\n          }\n        }}\n      >\n      {text}\n      </div>\n    );\n  }\n}\nexport default OutputLine;\n","const constMapInsert = (a, i, v) => {\n  return new Map([ ...a, [i, v] ]);\n};\n\nconst constListReplace = (a, i, v) => {\n  return a.map((_v, _i) => {\n    return (_i === i) ? v : _v;\n  });\n}\n\nexport {\n  constMapInsert,\n  constListReplace\n}\n","import React, { Component } from 'react';\nimport {\n  debounceAsync\n}from '../functions/Async';\nimport styles from './Output.module.css';\nimport OutputLine from './OutputLine';\nimport {\n  constMapInsert, constListReplace\n} from '../functions/ConstUpdaters';\n\nconst MAGIC_HEIGHT = 950;\n\nfunction TextException(message) {\n  this.name = 'TextException';\n  this.message = message;\n}\n\nconst makeNewLine = (line=[]) => {\n  return {\n    numRenders: 0,\n    elWidthDiff: 0,\n    elWidth: 0,\n    line: line\n  }\n}\n\nconst makeNewLines = (num) => {\n  const numRange = [...Array(num).keys()];\n  return numRange.map(()=>{\n    return makeNewLine([]);\n  })\n} \n\nconst readLastChar = (lineState) => {\n  const {line} = lineState;\n  return line.slice(-1)[0];\n}\n\nconst copyWidthMap = (widthMap, char, elWidthDiff) => {\n  if (char && elWidthDiff !== 0 && !widthMap.has(char)) {\n    return constMapInsert(widthMap, char, Math.abs(elWidthDiff));\n  }\n  return widthMap;\n}\n\nconst maxRound = (...args) => {\n  return Math.round(Math.max(...args));\n}\n\nconst minRound = (...args) => {\n  return Math.round(Math.min(...args));\n}\n\nconst minFloor = (...args) => {\n  return Math.floor(Math.min(...args));\n}\n\nconst sameFloor = (v0, v1) => {\n  return Math.floor(v0) === Math.floor(v1);\n}\n\nconst takeRatios = (params) => {\n  const {\n    elWidth, width, lineIdx, maxLines\n  } = params;\n  return {\n    widthRatio: elWidth / width,\n    heightRatio: lineIdx / maxLines\n  };\n}\n\nconst boundArtChar = (params) => {\n  const {artWidthMap, h} = params;\n  const {width, maxLines} = params;\n  const {elWidth, lineIdx} = params;\n  const {maskWidth, maskHeight} = params;\n  const {widthRatio, heightRatio} = takeRatios({\n    elWidth, width, lineIdx, maxLines\n  });\n  const x = minRound(widthRatio * maskWidth, maskWidth - 1);\n  const y = minRound(heightRatio * maskHeight, maskHeight - 1);\n  return {\n    x, y, h,\n    artWidthMap\n  };\n}\n\nconst indexLabel = (label, offset) => {\n  return label[offset % label.length];\n}\n\nclass Output extends Component {\n  constructor(props) {\n    super(props);\n    const fontSize = 16 * 1; //TODO\n    const lineHeight = 16 * 1; //TODO\n    const [w, h] = this.props.readMaskShape();\n    const idealHeight = MAGIC_HEIGHT;\n    const {innerWidth, innerHeight} = window;\n    const idealWidth = Math.floor(idealHeight * w / h);\n    const initialHeight = minFloor(idealHeight, innerHeight); \n    const lines = makeNewLines(Math.floor(initialHeight / lineHeight));\n    this.state = {\n      lines,\n      fontSize,\n      lineHeight,\n      idealWidth,\n      idealHeight,\n      maxWidth: Math.floor(innerWidth),\n      maxHeight: Math.floor(innerHeight),\n      canRender: true,\n      widthMap: new Map()\n    };\n    this.updateShape = debounceAsync(this.updateShape, 333).bind(this);\n    this.resetLines = debounceAsync(this.resetLines, 333).bind(this);\n    this.enqueueLineUpdate = this.enqueueLineUpdate.bind(this);\n    this.addCharsToLine = this.addCharsToLine.bind(this);\n    this.addCharToLine = this.addCharToLine.bind(this);\n    this.lineQueue = Promise.resolve(true);\n  }\n\n  getShape() {\n    const [w, h] = this.props.readMaskShape();\n    const {idealWidth, idealHeight} = this.state;\n    const {maxWidth, maxHeight} = this.state;\n    const output = {\n      width: minFloor(idealWidth, maxWidth),\n      height: minFloor(idealHeight, maxHeight)\n    };\n    const ratio_width = Math.floor(output.height * w / h);\n    const ratio_height = Math.floor(output.width * h / w);\n    if (ratio_width < output.width) {\n      return {\n        ...output,\n        width: ratio_width \n      }\n    }\n    if (ratio_height < output.height) {\n      return {\n        ...output,\n        height: ratio_height\n      }\n    }\n    return output;\n  }\n\n  getMaxLines() {\n    const {lineHeight} = this.state;\n    const {height} = this.getShape();\n    return Math.floor(height / lineHeight);\n  }\n\n  newLine(line=[]) {\n    return makeNewLine(line);\n  }\n\n  newChar({offset=-1, char='?', art=false}) {\n    // Offset of -1 means hidden\n    return {\n      offset: offset,\n      char: char,\n      art: art\n    };\n  }\n\n  getLabel() {\n    return this.props.label || '?';\n  }\n\n  getNextOffsetByColumn(lineState, increment) {\n    const {elWidth} = lineState;\n    const {width} = this.getShape();\n    const {widthMap} = this.state;\n    const label = this.getLabel();\n    const maxRange = [...Array(width).keys()];\n    const {prior} = maxRange.reduce((result, off) => {\n      const {done, prior, sumWidth} = result;\n      const offWidth = widthMap.get(indexLabel(label, off)) || 0;\n      if (done || sumWidth + offWidth > elWidth + offWidth/2) {\n        return {done: true, prior, sumWidth};\n      }\n      return {\n        prior: off,\n        done: false,\n        sumWidth: sumWidth + offWidth\n      }\n    }, {\n      prior: -1,\n      sumWidth: 0,\n      done: false\n    });\n    return Math.max(prior + increment, 0);\n  }\n\n  getNextOffset(lineState, increment) {\n    const {offset} = readLastChar(lineState) || {\n      offset: -1\n    };\n    return Math.max(offset + increment, 0);\n  }\n\n  getNextChar(lineState, increment) {\n    const {alignment} = this.props;\n    const label = this.getLabel();\n    const offset = (()=>{\n      // Column alignment must jump characters after a space\n      if (alignment === 'column' && increment > 0) {\n        const {art} = readLastChar(lineState) || {};\n        if (art === true) {\n          return this.getNextOffsetByColumn(lineState, increment);\n        }\n      }\n      // Otherwise, we just increment the next character\n      return this.getNextOffset(lineState, increment);\n    })();\n    const char = indexLabel(label, offset);\n    return this.newChar({\n      offset, char, art: false\n    });\n  }\n\n  getLastLine(lines) {\n    return lines.slice(-1)[0] || this.newLine();\n  }\n\n  getRatios(elWidth, lineIdx) {\n    const maxLines = this.getMaxLines();\n    const {width} = this.getShape();\n    return takeRatios({\n      elWidth, width, lineIdx, maxLines\n    });\n  }\n\n  checkRatios(elWidth, lineIdx) {\n    const {\n      widthRatio, heightRatio\n    } = this.getRatios(elWidth, lineIdx);\n    if (widthRatio > 1 || heightRatio > 1) {\n      return false;\n    }\n    return true;\n  }\n\n  getArtCharWidths(widthMap, maskWidth) {\n    const {artKernels} = this.props;\n    try {\n      return new Map(Object.keys(artKernels).map(\n        (char) => {\n          const elWidth = widthMap.get(char) || 0;\n          const {widthRatio} = this.getRatios(elWidth, 0);\n          const w = widthRatio * maskWidth;\n          if (!w) {\n            throw new TextException(`Unknown char width`);\n          }\n          return [char, {\n            w: maxRound(1, w)\n          }];\n        }\n      ));\n    }\n    catch (err) {\n      console.error(err);\n      return new Map([]);\n    }\n  }\n\n  getArtCharBounder() {\n    const {widthMap} = this.state;\n    const {readMaskShape} = this.props;\n    const {width} = this.getShape();\n    const maxLines = this.getMaxLines();\n    const [maskWidth, maskHeight] = readMaskShape();\n    const lineRatio = this.getRatios(0, 1).heightRatio;\n    const h = Math.max(1, Math.floor(lineRatio * maskHeight));\n    const artWidthMap = this.getArtCharWidths(widthMap, maskWidth);\n    \n    // Return a function to scale coordinates\n    const bounder = (elWidth, lineIdx) => {\n      return boundArtChar({\n        ...{width, maxLines}, // Input shape\n        ...{maskWidth, maskHeight}, // Output shape\n        ...{artWidthMap, h}, // Constant values\n        ...{elWidth, lineIdx} // Coordinates\n      });\n    };\n    return bounder;\n  }\n\n  async readMask(input) {\n    const {readMaskPixel} = this.props;\n    const {readArtPixel} = this.props;\n    const {lineState, lineIdx} = input;\n    const {elWidth} = lineState;\n    if (!this.checkRatios(elWidth, lineIdx)) {\n      return null;\n    }\n\n    // Convert element coords to mask coords\n    const {x, y, h, artWidthMap} = input.artCharBounder(\n      elWidth, lineIdx\n    );\n\n    // Return correct character\n    if (readMaskPixel(x,y)) {\n\n      const artChar = await readArtPixel(artWidthMap, h, x, y);\n\n      return this.newChar({\n        offset: this.getNextOffset(lineState, 0),\n        char: artChar,\n        art: true\n      });\n    }\n    return this.getNextChar(lineState, 1);\n  }\n\n  async addCharToLine(input, i) {\n    if (input.done) {\n      return input;\n    }\n\n    const {lineState, hiddenChars} = input;\n    if (hiddenChars.length > 0 && lineState.line.length > 0) {\n      return {\n        ...input,\n        done: true,\n        lineState: {\n          ...lineState,\n          line: lineState.line.concat([\n            hiddenChars.slice(-1)[0]\n          ]),\n        },\n        hiddenChars: hiddenChars.slice(0,-1)\n      };\n    }\n\n    const nextChar = await this.readMask(input);\n    if (nextChar === null) {\n      return input;\n    }\n    const {char} = nextChar;\n    const {lineIdx, iMax} = input;\n    const {elWidth} = lineState;\n    const {widthMap} = this.state;\n    const charWidth = widthMap.get(char) || 0;\n    const nextWidth = elWidth + charWidth;\n    const inBounds = this.checkRatios(nextWidth, lineIdx);\n    if (!inBounds) {\n      return {\n        ...input,\n        done: true\n      }\n    }\n\n    const done = [\n      i === iMax, // final character estimate\n      charWidth < 1 // no valid character estimate\n    ].some(x=>x);\n\n    return {\n      ...input,\n      lineState: {\n        ...lineState,\n        line: lineState.line.concat([nextChar]),\n        elWidth: (done ? elWidth : nextWidth)\n      },\n      done\n    };\n  }\n\n  async addCharsToLine(input, lineState, lineIdx) {\n    const {num, lines, hiddenChars} = input;\n    // Line is ready to go\n    if (!this.canLineRender(lineState)) {\n      return input;\n    }\n\n    const numRange = [...Array(num).keys()];\n    const output = await numRange.reduce(async (prior, i) => {\n        return this.addCharToLine(await prior, i);\n      }, Promise.resolve({\n        iMax: num - 1, done: false, lineState, lineIdx,\n        artCharBounder: input.artCharBounder,\n        hiddenChars: hiddenChars\n      })\n    );\n\n    return {\n      ...input,\n      allReady: false,\n      hiddenChars: output.hiddenChars,\n      lines: constListReplace(lines, lineIdx, output.lineState),\n    };\n  }\n\n  listHiddenChars() {\n    const {artKernels} = this.props;\n    const label = this.getLabel();\n    const {widthMap} = this.state;\n    // Compute a list of all chars that must be rendered\n    return Object.keys(artKernels).reduce((l0, char) => {\n      if (widthMap.has(char)) {\n        return l0;\n      }\n      return [\n        this.newChar({\n          char: char, offset: -1, art: true\n        })\n      ].concat(l0);\n    }, label.split('').reduce((l0, char) => {\n      if (widthMap.has(char)) {\n        return l0;\n      }\n      return [\n        this.newChar({\n          char: char, offset: -1, art: false\n        })\n      ].concat(l0);\n    }, []));\n  }\n\n  onColumnUpdate() {\n    return new Promise(async (resolve) => {\n      const {lines} = this.state;\n\n      const output = await lines.reduce(async (prior, l, i) => {\n          return this.addCharsToLine(await prior, l, i);\n        }, Promise.resolve({\n          artCharBounder: this.getArtCharBounder(),\n          hiddenChars: this.listHiddenChars(),\n          allReady: true,\n          num: 100,\n          lines\n        })\n      );\n\n      if (output.allReady) {\n        return this.setState({\n          canRender: false,\n        }, resolve);\n      }\n      return this.setState({\n        canRender: true,\n        lines: output.lines,\n      }, resolve);\n    });\n  }\n\n  updateLine(lineState, elWidth) {\n    const {width} = this.getShape();\n    const {numRenders} = lineState;\n    const {offset} = readLastChar(lineState) || {\n      offset: 0\n    };\n    // If at end of line or hidden character\n    if (elWidth > width || offset < 0) {\n      // We will measure a negative element width\n      return {\n        ...lineState,\n        line: lineState.line.slice(0, -1),\n        elWidthDiff: lineState.elWidth - elWidth\n      };\n    }\n    return {\n      ...lineState,\n      elWidth: elWidth,\n      numRenders: numRenders + 1,\n      elWidthDiff: elWidth - lineState.elWidth\n    };\n  }\n\n  onLineUpdate(id, elWidth) {\n    return new Promise((resolve) => {\n      const {lines, widthMap} = this.state;\n      if (id < lines.length) {\n        const {char} = readLastChar(lines[id]) || {};\n        const lineState = this.updateLine(lines[id], elWidth);\n        const {elWidthDiff} = lineState;\n        this.setState({\n          widthMap: copyWidthMap(widthMap, char, elWidthDiff),\n          lines: constListReplace(lines, id, lineState),\n          canRender: false\n        }, resolve);\n      }\n    });\n  }\n\n  enqueueLineUpdate(id, elWidth) {\n    this.lineQueue.then(async () => {\n      return await this.onLineUpdate(id, elWidth);\n    })\n  }\n\n  canLineRender(lineState) {\n    if (!lineState) {\n      return false;\n    }\n    const {numRenders, elWidthDiff} = lineState;\n    const endReached = (\n      numRenders >= 2 && (elWidthDiff === 0)\n    );\n    return !endReached;\n  }\n\n  // debounced\n  async updateShape() {\n    const newState = {};\n    const oldShape = this.getShape();\n    const {maxWidth, maxHeight, lineHeight} = this.state;\n    const {innerWidth, innerHeight} = window;\n\n    if (!sameFloor(maxWidth, innerWidth)) {\n      newState.maxWidth = Math.floor(innerWidth);\n    }\n    if (!sameFloor(maxHeight, innerHeight)) {\n      newState.maxHeight = Math.floor(innerHeight);\n    }\n    this.setState(newState, async () => {\n      const {height, width} = this.getShape();\n      // No need to redraw output if the shape has not changed\n      if (oldShape.height === height && oldShape.width === width) {\n        return;\n      }\n      await this.lineQueue;\n      const numLines = Math.floor(height / lineHeight);\n      this.setState({\n        canRender: true,\n        lines: makeNewLines(numLines)\n      });\n    });\n  }\n\n  // debounced\n  async resetLines() {\n    const {readMaskShape} = this.props;\n    const {idealHeight} = this.state;\n    const [w, h] = readMaskShape();\n    await this.lineQueue;\n    this.setState({\n      canRender: false,\n      idealWidth: Math.floor(idealHeight * w / h)\n    }, () => {\n      const {lineHeight} = this.state;\n      const {height} = this.getShape();\n      const numLines = Math.floor(height / lineHeight);\n      this.setState({\n        canRender: true,\n        lines: makeNewLines(numLines),\n      });\n    });\n  }\n\n  async componentDidMount() {\n    window.addEventListener('resize', async() => {\n      await this.updateShape();\n    });\n    await this.onColumnUpdate();\n  }\n\n  async componentDidUpdate() {\n    await this.lineQueue;\n    await this.onColumnUpdate();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const propsList = [\n      'label', 'artKernels', 'alignment'\n    ]\n    // Redraw completely if props change\n    const mustReset = propsList.map((p)=> {\n      return this.props[p] !== nextProps[p];\n    }).some(x => !!x);\n    if (mustReset) {\n      this.resetLines();\n      return false;\n    }\n    // Only update if can render\n    const {canRender} = nextState;\n    return canRender;\n  }\n\n  render() {\n    const {lines} = this.state;\n    const {fontSize, lineHeight} = this.state;\n    const {width, height} = this.getShape();\n\n    const outlineStyle = {\n      fontSize: `${fontSize}px`,\n      lineHeight: `${lineHeight}px`,\n    };\n    const centerStyle = {\n      'width': `${width}px`,\n      'height': `${height}px`\n    };\n\n    const outline = (\n      <div style={outlineStyle} className={styles.outline}>\n        {lines.map((lineState, i) => {\n          const lineStyle ={\n            top: i * lineHeight\n          };\n          const {line} = lineState;\n          return (\n            <OutputLine enqueueLineUpdate={this.enqueueLineUpdate}\n              canRender={this.canLineRender(lineState)}\n              stl={lineStyle} cls={styles.line}\n              line={line} key={i} id={i}\n            >\n            </OutputLine>\n          );\n        })}\n      </div>\n    );\n    return (\n      <div className={styles.grid}>\n        <div></div>\n        <div style={centerStyle}>\n          {outline}\n        </div>\n        <div></div>\n      </div>\n    )\n  }\n}\nexport default Output;\n","import React, { Component } from 'react';\nimport Output from './Output.js';\n\nclass UrlOutput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.missing = [\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,0,0,0,0,0,0,0],\n    ];\n    this.readMaskPixel = this.readMaskPixel.bind(this);\n    this.readMaskShape = this.readMaskShape.bind(this);\n  }\n\n  readMaskPixel(x,y) {\n    return !!this.missing[y][x];\n  }\n\n  readMaskShape() {\n    return [\n      this.missing[0].length, \n      this.missing.length\n    ];\n  }\n\n  render() {\n    const {alignment} = this.props;\n    return (\n      <Output space=' ' stepSize={100}\n        readMaskShape={this.readMaskShape}\n        readMaskPixel={this.readMaskPixel}\n        alignment={alignment}\n        label='Missing url! '\n      >\n      </Output>\n    )\n  }\n}\nexport default UrlOutput;\n","import React, { Component } from 'react';\nimport {\n  debounceAsync, sleepAsync\n} from '../functions/Async';\n\nfunction SobelImageException(message, source='') {\n  this.name = 'SobelImageException';\n  this.message = message;\n  this.source = source;\n}\n\nconst SEC = 1000;\nconst VEC2 = 2; // a 2D point in X,Y\nconst BOX4 = 4; // 4 points in X,Y\nconst BOX8 = VEC2 * BOX4; // 8\n\nclass SobelFilter extends Component {\n\n  constructor(props) {\n    super(props)\n    this.pos = 'a_pos';\n    this.image_pos = 'a_image_pos';\n    this.image_size = 'u_image_size';\n    this.canvasRef = React.createRef();\n    this.state = {\n      program: null,\n      buffer: null\n    };\n    this.initWebgl = debounceAsync(\n      this.initWebgl, SEC / 100\n    ).bind(this);\n    this.readPixels = debounceAsync(\n      this.readPixels, SEC / 100\n    ).bind(this);\n  }\n\n  async initWebgl(source) {\n    if (!source || !source.height | !source.width) {\n      const err = !source? 'No image source' : 'Invalid image shape';\n      throw new SobelImageException(err, source);\n    }\n    if (!this.gl) {\n      throw new SobelImageException('No webgl context', 'canvas');\n    }\n    // Match canvas shape to image shape\n    this.gl.canvas.width = source.width;\n    this.gl.canvas.height = source.height;\n    this.gl.viewport(0, 0, source.width, source.height);\n    // Load the shaders when ready and return the promise\n    const [vert, frag] = await Promise.all([\n      fetch(this.props.vertex).then(x => x.text()),\n      fetch(this.props.fragment).then(x => x.text())\n    ]);\n    const program = this.toProgram(new Map([\n      ['VERTEX_SHADER', vert],\n      ['FRAGMENT_SHADER', frag]\n    ]));\n    return await new Promise((resolve) => {\n      this.setState({\n        buffer: this.initBuffers(program),\n        program: program,\n      }, resolve);\n    });\n  }\n\n  // Link shaders from strings\n  toProgram(fileMap) {\n    const gl = this.gl;\n    const program = gl.createProgram();\n\n    const validate = function(verb,noun,object,key='') {\n      const step_status = gl[`${verb}_STATUS`];\n      const get_log = gl[`get${noun}InfoLog`];\n      const get_result = gl[`get${noun}Parameter`];\n      if (!get_result.call(gl, object, step_status)){\n        throw new SobelImageException(\n          `${get_log.call(gl, object)}`, `${verb} ${noun} ${key}` \n        );\n      }\n      return object;\n    }\n    // 1st is vertex; 2nd is fragment\n    fileMap.forEach((source,key) => {\n      const shader = gl.createShader(gl[key]);\n      gl.shaderSource(shader, source);\n      gl.compileShader(shader);\n      gl.attachShader(program, shader);\n      validate('COMPILE','Shader',shader,key);\n    });\n    gl.linkProgram(program);\n    return validate('LINK','Program',program);\n  }\n  // Load data to the buffers\n  initBuffers(program) {\n    const {gl} = this;\n    gl.useProgram(program);\n\n    const pos = [\n      -1, 1, -1, -1,\n      1, 1, 1, -1\n    ];\n    const pos_image =  [\n      0, 1, 0, 0,\n      1, 1, 1, 0\n    ];\n    const buffer = new Float32Array(pos.concat(pos_image));\n\n    // Set uniform values\n    const image_size = gl.getUniformLocation(program, this.image_size);\n    gl.uniform2f(image_size, gl.canvas.height, gl.canvas.width);\n\n    // Bind position and texture buffers\n    gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n    gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\n    return buffer;\n  }\n\n  locateVertices(name, i) {\n    const {gl} = this;\n    const bitdepth = this.state.buffer.BYTES_PER_ELEMENT;\n    const args = [\n      gl.getAttribLocation(this.state.program, name),\n      VEC2, gl.FLOAT, 0, VEC2*bitdepth, i*BOX8*bitdepth\n    ];\n    gl.enableVertexAttribArray(args[0]);\n    gl.vertexAttribPointer.apply(gl, args);\n  }\n\n  // Load source to texture\n  drawWebgl(source) {\n    const {gl} = this;\n\n    // Set glsl attributes\n    this.locateVertices(this.pos, 0);\n    this.locateVertices(this.image_pos, 1);\n\n    // Set Texture for GLSL\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, gl.createTexture());\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n\n    // Get texture\n    this.tex = {\n      texImage2D: [gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE],\n    };\n\n    // Set texture filters\n    [\n      [gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE],\n      [gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE],\n      [gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this.gl.NEAREST],\n      [gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this.gl.NEAREST]\n    ].forEach((x) => {\n      gl.texParameteri(...x);\n    });\n    // Set the image texture\n    gl.texImage2D(\n      gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA,\n      gl.UNSIGNED_BYTE, source\n    );\n\n    // Draw the four vertices\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, BOX4);\n\n    return this.gl.canvas;\n  }\n\n  async readPixels(x,y,w,h) {\n    const {gl} = this;\n    const {source} = this.props;\n    const {buffer, program} = this.state;\n    const pixels = new Uint8Array(w*h*4);\n    if (!gl) {\n      throw new SobelImageException('No webgl context', 'canvas');\n    }\n    if (!source) {\n      throw new SobelImageException('No image source', 'canvas');\n    }\n    if (!buffer || !program) {\n      throw new SobelImageException('No webgl program', 'canvas');\n    }\n    this.drawWebgl(source);\n    gl.readPixels(\n      x, y, w, h,\n      gl.RGBA, gl.UNSIGNED_BYTE,\n      pixels\n    ); \n    if (pixels.every(x=> x===0)) {\n      throw new SobelImageException('Empty webgl buffer', 'canvas');\n    }\n\n    return pixels;\n  }\n\n  async readAllPixels() {\n    while (true) {\n      try {\n        const {canvas} = this.gl;\n        const [x,y,w,h] = [0, 0, canvas.width, canvas.height];\n        const pixels = await this.readPixels(x,y,w,h);\n        if (pixels === null) {\n          throw new SobelImageException('canceled');  \n        }\n        return {\n          width: w,\n          height: h,\n          pixels\n        }\n      }\n      catch (err) {\n        if (err.message !== 'canceled') {\n          console.error(err);\n        }\n        await sleepAsync(SEC);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.gl = this.canvasRef.current.getContext('webgl');\n  }\n\n  componentDidUpdate(prevProps) {\n    const {source} = this.props;\n    if (!prevProps.source && source) {\n      this.initWebgl(source).catch((err) => {\n        if (err instanceof SobelImageException) {\n          this.setState({fatalError: true});\n          return console.error(`${err.source}:\\n${err.message}`);\n        }\n        console.error(err);\n      });\n    }\n  }\n\n  render() {\n    return (\n      <canvas id=\"sobel-filter-canvas\" ref={this.canvasRef}> \n      </canvas>\n    );\n  }\n};\n\n\nexport default SobelFilter;\n","import React, { Component } from 'react';\nimport {Pokedex} from 'pokeapi-js-wrapper';\nimport SobelFilter from './SobelFilter';\nimport Output from './Output.js';\nimport {\n  constMapInsert, constListReplace\n} from '../functions/ConstUpdaters';\nimport {\n  rgb2hsv\n} from '../functions/Colors';\n// TODO RM\nimport {\n  sleepAsync\n} from '../functions/Async';\n\nconst GENERATIONS = [\n  '','i','ii','iii','iv','v','vi','vii','viii', // as of 2021\n  'ix', 'x', 'xi', 'xii', 'xiii', 'xiv', 'xv', // until ~2042\n  'xvi', 'xvii', 'xviii', 'xix', 'xx', 'xxi' // until ~2060\n];\n\nconst modeOrMax = (a) => {\n  const counts = a.reduce((counts, v) => {\n    const count = 1 + (counts.get(v) || 0); \n    return counts.set(v, count);\n  }, new Map([]));\n  return [...counts].reduce((mode, [v, count]) => {\n    const mode_count = (counts.get(mode) || 0);\n    if (mode_count === count) {\n      return Math.max(v, mode); \n    }\n    return (count > mode_count) ? v : mode;\n  }, -1);\n}\n\nconst allWhole = (...args) => {\n  return args.reduce((ok, arg) => {\n    if (!ok || arg % 1 !== 0 || arg < 0) {\n      return false; \n    }\n    return true;\n  }, true);\n}\n\nconst palindromeIndex = ({maxCenter, oldSize, newSize, weigh}) => {\n  const {midFloor, sideFloor} = ((floor)=> {\n    const evenFloor = (floor % 2 === 0);\n    return {\n      midFloor: Math.max(floor - 1*evenFloor, 1),\n      sideFloor: Math.max(floor - 1*(!evenFloor), 1)\n    };\n  })(Math.floor(newSize / oldSize));\n  const sideSum = (newSize - midFloor) / 2;\n  const sideLen = (oldSize - 1) / 2;\n  const excess = sideSum - sideLen * sideFloor;\n  if (!allWhole(midFloor-1, sideFloor-1, excess)){\n    throw new SpriteException(\n      `Cannot upsample from ${oldSize} to ${newSize}`\n    );\n  }\n  const sideRange = [...Array(sideLen).keys()].sort((a,b) => {\n    return Math.sign(weigh(b, sideLen) - weigh(a, sideLen));\n  });\n  const oldRange = [...Array(oldSize).keys()];\n  const excessRange = [...Array(excess).keys()];\n\n  const {\n    leftCounts, midCount, rightCounts\n  } = excessRange.reduce((out, i) => {\n    const index = sideRange[i % sideLen];\n    const nextValue = out.rightCounts[index] + 1;\n    if (maxCenter && out.midCount < nextValue) {\n      if (out.remaining >= 1) {\n        out.midCount += 2;\n        out.remaining -= 1;\n      }\n    }\n    if (out.remaining >= 1) {\n      out.leftCounts[sideLen-1-index] = nextValue;\n      out.rightCounts[index] = nextValue;\n      out.remaining -= 1;\n    }\n    return out;\n  }, {\n    leftCounts: sideRange.map((_)=>sideFloor),\n    rightCounts: sideRange.map((_)=>sideFloor),\n    remaining: excess,\n    midCount: midFloor\n  });\n  const allCounts = [...leftCounts, midCount, ...rightCounts];\n  const allOldIdx = oldRange.reduce(({final, countIdx}, i) => {\n    const countRange = [...Array(allCounts[countIdx]).keys()];\n    return {\n      final: final.concat(countRange.map((_)=>i)),\n      countIdx: countIdx + 1\n    };\n  }, {\n    final: [],\n    countIdx: 0\n  }).final;\n  return allOldIdx;\n}\n\nconst scaleArtKernel = (sources, newSize, char) => {\n  const numRange = [...Array(newSize).keys()]\n  const rescale = ((quad) => {\n    const oldSize = quad.length;\n    return {\n      wideNear: palindromeIndex({\n        maxCenter: true, oldSize, newSize,\n        weigh: (idx, len) => len-1-idx\n      }),\n      wideFar: palindromeIndex({\n        maxCenter: false, oldSize, newSize,\n        weigh: (idx, len) => idx\n      }),\n      wideTween: palindromeIndex({\n        maxCenter: false, oldSize, newSize,\n        weigh: (idx, len) => {\n          return Math.min(idx+0.01, len-1-idx);\n        }\n      }),\n    }\n  });\n  const sourceIdxList = sources.map(source => rescale(source));\n  return numRange.map((iy) => {\n    return numRange.map((ix) => {\n      const options = [].concat(...sources.map((source, si) => {\n        const iyTween = sourceIdxList[si].wideTween[iy];\n        const ixTween = sourceIdxList[si].wideTween[ix];\n        const iyNear = sourceIdxList[si].wideNear[iy];\n        const ixNear = sourceIdxList[si].wideNear[ix];\n        const iyFar = sourceIdxList[si].wideFar[iy];\n        const ixFar = sourceIdxList[si].wideFar[ix];\n        return [\n          source[iyFar][ixFar],\n          source[iyNear][ixNear],\n          source[iyTween][ixTween]\n        ];\n      }));\n      return modeOrMax(options);\n    });\n  });\n}\n\nconst parseArtPixel = (pixelBuffer, i4) => {\n  const [r, g, b] = pixelBuffer.slice(4 * i4, 3 + 4 * (i4));\n  const [h, s, v] = rgb2hsv(r, g, b);\n  // black 0\n  if (v <= (1/255)) {\n    return 0;\n  }\n  // white 1\n  if (s <= (1/255)) {\n    return 1;\n  }\n  // red=2, green=3, blue=4\n  return 2 + Math.floor((h % 360) / (360 / 3));\n}\n\nconst maxCharMapWidth = (charMap) => {\n  const charList = [...charMap.values()];\n  return  charList.reduce((wMax, {w}) => {\n    return Math.max(wMax, w);\n  }, 1);\n}\n\nconst parseLangList = (list, property) => {\n  const extractor = (langMap, lang) => {\n    const value = lang[property];\n    const {language} = lang;\n    const key = language.name;\n    if (key && value) {\n      langMap.set(key, value);\n    }\n    return langMap;\n  }\n  return list.reduce(extractor, new Map([]));\n}\n\nconst parseGeneration = (generation) => {\n  const roman = generation.split('-').slice(-1)[0].toLowerCase();\n  return GENERATIONS.indexOf(roman) || 0;\n}\n\nclass Pokemon {\n  constructor(params) {\n    const {name, id, names, genera, varieties} = params;\n    this.id = id;\n    this.name = name;\n    this.nameLangMap = parseLangList(names, 'name');\n    this.genusLangMap = parseLangList(genera, 'genus');\n    this.hasGenderDiff = params.has_gender_differences || false;\n    this.hasGender = (params.gender_rate || 0) !== -1;\n    this.generation = parseGeneration(params.generation?.name || '');\n    // Each pokemon species may have multiple varieties\n    const {vMap, vDefault} = varieties.reduce((result, variety) => {\n      const value = variety.pokemon || {};\n      if (value.name) {\n        if (variety.is_default) {\n          result.vDefault = value.name;\n        }\n        result.vMap.set(value.name, {\n          // Each variety may have many sprites\n          sprites: []\n        });\n      }\n      return result;\n    }, {\n      vDefault: null,\n      vMap: new Map([])\n    });\n    this.varietyMap = vMap;\n    this.varietyDefault = vDefault;\n  }\n  getName(lang) {\n    return this.nameLangMap.get(lang) || this.name;\n  }\n  getGenus(lang) {\n    return this.genusLangMap.get(lang) || null;\n  }\n\n  newSpriteList(sprite, label, url) {\n    const splitLabel = label.split('_');\n    const [side, gender] = splitLabel;\n    if (splitLabel.length !== 2 || !url) {\n      return [];\n    }\n    // ignore shiny or grayscale sprites\n    if (['shiny', 'gray'].includes(gender)) {\n      return [];\n    }\n    return [{\n      ...sprite,\n      gender: {\n        'default': this.hasGender ? 'male' : 'none'\n      }[gender] || gender,\n      canvas: null,\n      side: side,\n      url: url\n    }];\n  }\n\n  parseSpriteData(spriteData) {\n    return Object.entries(spriteData || {}).reduce((l0, [k0, v0])=>{\n      if (k0 === 'other') {\n        return Object.entries(v0 || {}).reduce((l1, [k1, v1]) => {\n          return Object.entries(v1 || {}).reduce((l2, [k2, v2]) => {\n            return l2.concat(this.newSpriteList({\n                generation: {\n                  'dream_world': 5\n                }[k1] || this.generation,\n                source: k1\n              }, k2, v2\n            ));\n          }, l1);\n        }, l0);\n      }\n      else if (k0 === 'versions') {\n        return Object.entries(v0 || {}).reduce((l1, [k1, v1]) => {\n          return Object.entries(v1 || {}).reduce((l2, [k2, v2]) => {\n            return Object.entries(v2 || {}).reduce((l3, [k3, v3]) => {\n              if (k2 === 'icons') {\n                return l3;\n              }\n              return l3.concat(this.newSpriteList({\n                  generation: parseGeneration(k1),\n                  source: k2\n                }, k3, v3\n              ));\n            }, l2);\n          }, l1);\n        }, l0);\n      }\n      return l0.concat(this.newSpriteList({\n          generation: 0,\n          source: 'default'\n        }, k0, v0\n      ));\n    },[]).sort((...ab) => {\n      const sortChoices = (items, key, choices=null) => {\n        return () => {\n          const [a,b] = items.slice(0,2).map((item) => {\n            if (choices === null) {\n              return item[key];\n            }\n            const choiceIndex = choices.indexOf(item[key]);\n            return choiceIndex !== -1 ? choiceIndex : choices.length;\n          });\n          return a - b;\n        }\n      }\n      const functions = [\n        sortChoices(ab, 'side', [\n          'front', 'back'\n        ]),\n        sortChoices(ab, 'source', [\n          'official-artwork', 'dream_world', 'default'\n        ]),\n        sortChoices(ab, 'generation', null),\n        sortChoices(ab, 'gender', [\n          'none', 'female', 'male'\n        ]),\n      ]\n      for (let fn of functions) {\n        const diff = fn();\n        if (diff !== 0) {\n          return diff;\n        }\n      }\n      return 0;\n    });\n  }\n\n  setSprites(variety, sprites) {\n    this.varietyMap = constMapInsert(this.varietyMap, variety, {\n      sprites: sprites\n    });\n    return this.getSprites(variety);\n  }\n\n  setSprite(variety, spriteIndex=0, sprite=null) {\n    if (sprite) {\n      const sprites = constListReplace(\n        this.getSprites(variety), spriteIndex, sprite\n      );\n      this.setSprites(variety, sprites);\n    }\n    return this.getSprite(variety, spriteIndex);\n  }\n\n  getSprites(variety) {\n    const varietyState = this.varietyMap.get(variety) || {};\n    return varietyState.sprites || [];\n  }\n\n  getSprite(variety, index=0) {\n    return this.getSprites(variety)[index] || null;\n  }\n\n  loadSprite(variety, index=0) {\n    return new Promise((resolve, reject) => {\n      const sprite = this.getSprite(variety, index=0) || {};\n      const url = sprite.url || '';\n      if (!url) {\n        reject(new SpriteException('No sprite url'));\n      }\n\n      const spriteImage = new Image();\n      spriteImage.crossOrigin = \"Anonymous\";\n      spriteImage.onload = async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = spriteImage.width;\n        canvas.height = spriteImage.height;\n        canvas.getContext('2d').drawImage(spriteImage,0,0);\n        resolve({\n          ...sprite,\n          canvas: canvas\n        });\n      };\n      spriteImage.onerror = () => {\n        reject(new SpriteException(`Invalid sprite url: ${url}`));\n      }\n      spriteImage.src = url; \n    });\n  }\n\n  readSpriteMaskPixel(variety, index=0, x, y) {\n    const {canvas} = this.getSprite(variety, index) || {};\n    if (!canvas) {\n      return false;\n    }\n    const context = canvas.getContext('2d');\n    const {data} = context.getImageData(x, y, 1, 1) || {};\n    if (!data) {\n      return false;\n    }\n    // Truee if greater than half alpha\n    return data[3] >= 127;\n  }\n}\n\nconst makeEmptyPokemon = () => {\n  return new Pokemon({\n    id: 0,\n    name: '',\n    names: [\n      {\"language\":{\"name\":\"de\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"en\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"es\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"fr\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"it\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"ja\"},\"name\":\"けつばん\"},\n      {\"language\":{\"name\":\"ja-Hrkt\"},\"name\":\"けつばん\"},\n      {\"language\":{\"name\":\"ko\"},\"name\":\"미싱노\"},\n      {\"language\":{\"name\":\"roomaji\"},\"name\":\"Ketsuban\"},\n      {\"language\":{\"name\":\"zh-Hans\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"zh-Hant\"},\"name\":\"MissingNo.\"}\n    ],\n    genera: [],\n    varieties: [],\n    gender_rate: -1,\n    generation: 'i',\n    has_gender_differences: false\n  });\n}\n\nconst parseAbsoluteInteger = (v, alt=null) => {\n  return ((i)=> !isNaN(i) ? Math.abs(i) : alt)(parseInt(v));\n}\n\n// Convert a string n to a lowercase name or a dex index\nconst returnValidNameOrNumber = (n) => {\n  const nNumber = parseAbsoluteInteger(n, NaN);\n  const isZero = nNumber === 0;\n  const isEmpty = n.length === 0;\n  if (isEmpty) {\n    throw new DexException('No species name or dex number!');\n  }\n  if (isZero) {\n    throw new DexException('Invalid dex number!');\n  }\n  return isNaN(nNumber)? n.toLowerCase() : nNumber;\n}\n\nfunction DexException(message) {\n  this.name = 'DexException';\n  this.message = message;\n}\n\nfunction SpriteException(message) {\n  this.name = 'SpriteException';\n  this.message = message;\n}\n\nclass DexOutput extends Component {\n  constructor(props) {\n    super(props);\n\n    // TODO RM\n    this.todoRef = React.createRef();\n    this.sobelRef = React.createRef();\n    const artKernels3x3 = {\n      ' ': [\n        [ 0, 0,-1],\n        [ 0, 0,-1],\n        [ 0, 0,-1]\n      ],\n      '|': [\n        [ 1, 1,-1],\n        [ 1, 1,-1],\n        [ 1, 1,-1]\n      ],\n      '¯': [\n        [ 2, 2, 2],\n        [-1,-1,-1],\n        [-1,-1,-1]\n      ],\n      '–': [\n        [-1,-1,-1],\n        [ 2, 2, 2],\n        [-1,-1,-1]\n      ],\n      '_': [\n        [-1,-1,-1],\n        [-1,-1,-1],\n        [ 2, 2, 2],\n      ],\n      '\\\\': [\n        [ 3,-1,-1],\n        [ 3, 3,-1],\n        [ 3, 3,-1],\n      ],\n      '/': [\n        [-1, 4,-1],\n        [ 4, 4,-1],\n        [ 4, 4,-1],\n      ],\n    };\n    const artKernels5x5 = {\n      ' ': [\n        [ 0, 0, 0,-1,-1],\n        [ 0, 0, 0,-1,-1],\n        [ 0, 0, 0,-1,-1],\n        [ 0, 0, 0,-1,-1],\n        [ 0, 0, 0,-1,-1]\n      ],\n      '|': [\n        [ 1, 1, 1,-1,-1],\n        [ 1, 1, 1,-1,-1],\n        [ 1, 1, 1,-1,-1],\n        [ 1, 1, 1,-1,-1],\n        [ 1, 1, 1,-1,-1]\n      ],\n      '¯': [\n        [ 2, 2, 2, 2, 2],\n        [ 2, 2, 2, 2, 2],\n        [-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1]\n      ],\n      '–': [\n        [-1,-1,-1,-1,-1],\n        [ 2, 2, 2, 2, 2],\n        [ 2, 2, 2, 2, 2],\n        [ 2, 2, 2, 2, 2],\n        [-1,-1,-1,-1,-1]\n      ],\n      '_': [\n        [-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1],\n        [ 2, 2, 2, 2, 2],\n        [ 2, 2, 2, 2, 2]\n      ],\n      '\\\\': [\n        [ 3, 3,-1,-1,-1],\n        [ 3, 3,-1,-1,-1],\n        [ 3, 3, 3,-1,-1],\n        [-1, 3, 3,-1,-1],\n        [-1, 3, 3, 3,-1],\n      ],\n      '/': [\n        [-1, 4, 4, 4,-1],\n        [-1, 4, 4,-1,-1],\n        [ 4, 4, 4,-1,-1],\n        [ 4, 4,-1,-1,-1],\n        [ 4, 4,-1,-1,-1]\n      ],\n    };\n    const tinyArtKernels = Object.keys(artKernels3x3).reduce((kernels, char) => {\n      kernels[char] = new Map([\n        [3, artKernels3x3[char]],\n        [5, artKernels5x5[char]]\n      ]);\n      return kernels;\n    }, {});\n    const commonOddNums = [\n      7,9,11,13,15,17,19,21,23,25,27,29,31,33,\n      35,37,39,41,43,45,47,49,51,53,55,57,59,61\n    ];\n    const artKernels = commonOddNums.reduce((kernels, size) => {\n      const scaleToSize = (char) => {\n        const sources =  [\n          kernels[char].get(3), kernels[char].get(5)\n        ];\n        try {\n          return scaleArtKernel(sources, size, char);\n        }\n        catch (err) {\n          console.error(err);\n          return null;\n        }\n      }\n      return Object.keys(kernels).reduce((kernels, char) => {\n        kernels[char].set(size, scaleToSize(char));\n        return kernels;\n      }, kernels);\n    }, tinyArtKernels);\n    this.state = {\n      lang: 'en',\n      artBuffer: {\n        pixels: [],\n        height: 0,\n        width: 0\n      },\n      variety: null,\n      spriteIndex: 0,\n      artKernels: artKernels,\n      maxArtKernel: Math.max(...artKernels[' '].keys()),\n      pokemon: makeEmptyPokemon()\n    };\n    this.dex = new Pokedex();\n    this.missing = [\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,0,0,0,0,0,0,0],\n    ];\n    this.readArtPixel = this.readArtPixel.bind(this);\n    this.readMaskPixel = this.readMaskPixel.bind(this);\n    this.readMaskShape = this.readMaskShape.bind(this);\n  }\n\n  componentDidMount() {\n    // TODO RM\n    this.ctx = this.todoRef.current.getContext('2d');\n\n    const {n} = this.props;\n    const {variety, spriteIndex} = this.state;\n    // This call is non-blocking\n    this.loadPokemon(n, variety, spriteIndex);\n  }\n\n  componentDidUpdate() {\n    const {n} = this.props;\n    const {variety, spriteIndex} = this.state;\n    // This call is non-blocking\n    this.loadPokemon(n, variety, spriteIndex);\n  }\n\n  isSameSpecies(pokemonOrNameOrNumber) {\n    // Flexible type for input\n    const n = ((value) => {\n      if (value instanceof Pokemon) {\n        return value.id;\n      }\n      return value;\n    })(pokemonOrNameOrNumber);\n\n    return this.spriteCall(({p}) => {\n      return [p.name, p.id].includes(n);\n    });\n  }\n\n  isSameVariety(pokemon, variety) {\n    if (!this.isSameSpecies(pokemon)) {\n      return false;\n    }\n    return this.spriteCall(({v}) => {\n      return v === variety;\n    })\n  }\n\n  isSameSprite(pokemon, variety, spriteIndex) {\n    if (!this.isSameVariety(pokemon, variety)) {\n      return false;\n    }\n    return this.spriteCall(({s}) => {\n      return s === spriteIndex;\n    })\n  }\n\n  async loadPokemonSpecies(nameOrNumber) {\n    const newSpecies = !this.isSameSpecies(nameOrNumber);\n    // Don't bother reloading the same species\n    const pokemon = newSpecies? new Pokemon(\n      await this.dex.getPokemonSpeciesByName(nameOrNumber)\n    ) : this.spriteCall(({p}) => p);\n    // Always return pokemon\n    return pokemon; \n  }\n\n  async loadPokemonSprites(pokemon, variety) {\n    // Don't bother reloading the same variety\n    if (this.isSameVariety(pokemon, variety)) {\n      return pokemon.getSprites(variety);\n    }\n    return pokemon.parseSpriteData(\n      (await this.dex.getPokemonByName(variety) || {}).sprites\n    )\n  }\n\n  async loadPokemonSprite(pokemon, variety, spriteIndex) {\n    // Don't bother reloading the same sprite\n    if (this.isSameSprite(pokemon, variety, spriteIndex)) {\n      return pokemon.getSprite(variety, spriteIndex);\n    }\n    return await pokemon.loadSprite(variety, spriteIndex);\n  }\n\n  async loadPokemon(n, v=null, spriteIndex=0) {\n    const {lang} = this.state;\n    const pokemon = await (async () => {\n      try {\n        const nameOrNumber = returnValidNameOrNumber(n);\n        return await this.loadPokemonSpecies(nameOrNumber);\n      }\n      catch (err) {\n        console.error(err);\n        return makeEmptyPokemon();\n      }\n    })();\n    const validVariety = [\n      v, this.isSameSpecies(pokemon)\n    ].every(x=>!!x);\n    const variety =  validVariety ? v : (\n      pokemon.varietyDefault || pokemon.name\n    );\n\n    // Don't bother setting state if same sprite\n    const sameSprite = this.isSameSprite(\n      pokemon, variety, spriteIndex\n    );\n    if (sameSprite) {\n      return false;\n    }\n    pokemon.setSprites(variety, (\n      await (async () => {\n        try {\n          return await this.loadPokemonSprites(\n            pokemon, variety\n          );\n        }\n        catch (err) {\n          console.error(err); \n          return pokemon.getSprites(variety);;\n        }\n      })()\n    ));\n    pokemon.setSprite(variety, spriteIndex, (\n      await (async () => {\n        try {\n          return await this.loadPokemonSprite(\n            pokemon, variety, spriteIndex\n          );\n        }\n        catch (err) {\n          console.error(err);\n          return null;\n        }\n      })()\n    ));\n    this.setState({\n      spriteIndex: spriteIndex,\n      pokemon: pokemon,\n      variety: variety\n    });\n    this.props.setSpeciesName(pokemon.getName(lang));\n    this.props.setSpeciesIndex(pokemon.id);\n    return true;\n  }\n\n  spriteCall(fn) {\n    const {pokemon, variety, spriteIndex} = this.state;\n    return fn({\n      p: pokemon,\n      v: variety,\n      s: spriteIndex\n    });\n  }\n\n  async accessArtBuffer({x, y, w, h}) {\n    const sobelFilter = this.sobelRef.current;\n    const artBuffer = await (async () => {\n      if (this.state.artBuffer.pixels.length > 0) {\n        return this.state.artBuffer;\n      }\n      const artBuffer = await sobelFilter.readAllPixels();\n      await new Promise((resolve) => {\n        this.setState({artBuffer}, resolve);\n      });\n      return artBuffer;\n    })();\n\n    const rowRange = [...Array(h).keys()];\n    const smallBuffer = rowRange.reduce((pixels, iy) => {\n      const flip_y = artBuffer.height - (y + iy);\n      const start = (flip_y * artBuffer.width + x);\n      const end = start + w;\n      return pixels.concat(\n        [].slice.call(artBuffer.pixels, start * 4, end * 4)\n      )\n    }, []);\n    return smallBuffer;\n  }\n\n  resizeArtPixelBounds({x, y, w, h}) {\n    const center = {\n      x: x + (w / 2),\n      y: y + (h / 2)\n    }\n    // Round to the nearest odd number >= 3\n    const new_size = Math.min(\n      this.state.maxArtKernel,\n      Math.floor(Math.max(h, w, 3) / 2)*2 + 1\n    );\n    const new_shape = {\n      h: new_size, w: new_size\n    };\n    return {\n      ...new_shape,\n      x: Math.round(Math.max(0, center.x - (new_shape.w / 2))),\n      y: Math.round(Math.max(0, center.y - (new_shape.h / 2)))\n    }\n  }\n\n  async readArtPixelColumns({x, y, w, h}) {\n    const smallBuffer = await this.accessArtBuffer({x, y, w, h});\n    const pixelRange = [...Array(w * h).keys()];\n\n    return [...pixelRange.reduce((cols, i4)=> {\n      const col = cols.get(i4 % w) || [];\n      const pixel = parseArtPixel(smallBuffer, i4);\n      return cols.set(i4 % w, col.concat([pixel]));\n    }, new Map([])).values()];\n  }\n\n  async readArtPixel(artWidthMap, h, x, y) {\n    if (!artWidthMap.size) {\n      return '?'; //TODO\n    }\n    const {artKernels} = this.state;\n    const artPixelBounds = this.resizeArtPixelBounds({\n      x: x,\n      y: y,\n      w: maxCharMapWidth(artWidthMap),\n      h: h\n    });\n    const pixelColumns = await this.readArtPixelColumns(artPixelBounds);\n    const charCounts = [...pixelColumns].reduce((total, column, ix) => {\n      return [...artWidthMap].reduce(\n        (counts, [char, {w}]) => {\n          const kernel = artKernels[char].get(column.length);\n          if (ix === 0) {\n            console.log(column.length);\n            for (let kernel_row of kernel) {\n              console.log(JSON.stringify(kernel_row));\n            }\n          }\n          const count = column.reduce(({n, t}, pixel, iy) => {\n            return {\n              n: n + (kernel[iy][ix] === pixel),// all matching\n              t: t + (kernel[iy][ix] >= 0) // of all possible\n            };\n          }, counts.get(char) || {n: 0, t: 0})\n          return counts.set(char, count)\n        }\n      , total);\n    }, new Map([]));\n    const charRatios = new Map( \n      [...charCounts].map(([char, {n, t}]) => {\n        return [char, n / Math.max(t, 1)];\n      })\n    );\n    const charWeights = {\n      ' ': 1\n    };\n    const lineThickness = 4;\n    const defaultWeight = artPixelBounds.h / lineThickness;\n    const out = Object.keys(artKernels).reverse().reduce(\n      (result, char) => {\n        const weightMax = charWeights[result] || defaultWeight;\n        const weight = charWeights[char] || defaultWeight;\n        const countMax = charRatios.get(result) || 0; \n        const count = charRatios.get(char) || 0;\n        if (countMax * weightMax <= count * weight) {\n          return char;\n        }\n        return result;\n      }, ''\n    );\n    // TODO RM\n    const [r, g, b] = {\n      '?': [255,0,255],\n      ' ': [0,0,0],\n      '|': [255,255,255],\n      '¯': [255,0,0],\n      '–': [255,0,0],\n      '_': [255,0,0],\n      '\\\\': [0,255,0],\n      '/': [0,0,255]\n    }[out || '?'];\n    this.ctx.clearRect(\n      artPixelBounds.x, artPixelBounds.y, artPixelBounds.w, artPixelBounds.h\n    );\n    this.ctx.fillStyle = \"rgba(\"+r+\",\"+g+\",\"+b+\",\"+(1.0)+\")\";\n    this.ctx.fillRect(\n      artPixelBounds.x, artPixelBounds.y, artPixelBounds.w, artPixelBounds.h\n    );\n    this.ctx.fillStyle = \"rgba(\"+0+\",\"+0+\",\"+0+\",\"+(1.0)+\")\";\n    this.ctx.fillRect(\n      artPixelBounds.x + 1, artPixelBounds.y + 1,\n      artPixelBounds.w - 2, artPixelBounds.h - 2\n    );\n    await sleepAsync(5);\n\n    if (!out.length) {\n      return '?'; // TODO\n    }\n    return out;\n  }\n\n  readMaskPixel(x,y) {\n    const {canvas} = this.spriteCall(({p,v,s}) => {\n      const sprite = p.getSprite(v,s) || {};\n      return sprite;\n    });\n    if (!canvas) {\n      return !!this.missing[y][x];\n    }\n    return this.spriteCall(({p,v,s}) => {\n      return p.readSpriteMaskPixel(v,s,x,y);\n    });\n  }\n\n  readMaskShape() {\n    const {canvas} = this.spriteCall(({p,v,s}) => {\n      return p.getSprite(v,s) || {};\n    });\n    if (!canvas) {\n      return [\n        this.missing[0].length, \n        this.missing.length\n      ];\n    }\n    return [canvas.width, canvas.height];\n  }\n\n  render() {\n    const {alignment} = this.props;\n    const {lang, artKernels} = this.state;\n    const label = this.spriteCall(({p}) => {\n      return p.getName(lang) || 'DEX ERR ';\n    });\n\n    const output = (\n        <Output \n          readMaskShape={this.readMaskShape}\n          readMaskPixel={this.readMaskPixel}\n          readArtPixel={this.readArtPixel}\n          label={label.toLocaleLowerCase('en-US')}\n          artKernels={artKernels}\n          alignment={alignment}\n        >\n        </Output>\n    );\n    // TODO\n    const {url, canvas} = this.spriteCall(({p,v,s}) => {\n      return p.getSprite(v,s) || {};\n    });\n    // TODO RM\n    const width = canvas?.width || 100;\n    const height = canvas?.height || 100;\n    if (this.ctx) {\n      this.ctx.clearRect(0, 0, width, height);\n    }\n    return (\n      <div>\n        {true? output : ''}\n        <a href={url || '/'}>\n          <SobelFilter\n            ref={this.sobelRef}\n            source={canvas}\n            vertex='/vertex.glsl'\n            fragment='/fragment.glsl'\n          >\n          </SobelFilter>\n        </a>\n        \n        <canvas\n          width={width} height={height}\n          id=\"todo-remove\" ref={this.todoRef}\n        > \n        </canvas>\n\n      </div>\n    )\n  }\n}\nexport default DexOutput;\n","const rgb2hsv = (r,g,b) => {\n if (r<0 || g<0 || b<0 || r>255 || g>255 || b>255) {\n   alert ('RGB values must be in the range 0 to 255.');\n   return;\n }\n r=r/255; g=g/255; b=b/255;\n const minRGB = Math.min(r,Math.min(g,b));\n const maxRGB = Math.max(r,Math.max(g,b));\n\n // Black-gray-white\n if (minRGB===maxRGB) {\n  return [0,0,minRGB];\n }\n\n // Colors other than black-gray-white:\n const d = (r===minRGB) ? g-b : ((b===minRGB) ? r-g : b-r);\n const h = (r===minRGB) ? 3 : ((b===minRGB) ? 1 : 5);\n const computedH = 60*(h - d/(maxRGB - minRGB));\n const computedS = (maxRGB - minRGB)/maxRGB;\n const computedV = maxRGB;\n return [computedH,computedS,computedV];\n}\n\nexport {\n\trgb2hsv\n}\n","import React, {useState} from \"react\";\nimport {\n  BrowserRouter as Router,\n  useLocation,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport styles from './App.module.css';\nimport UrlOutput from './UrlOutput.js';\nimport DexOutput from './DexOutput.js';\n\n// Query parameter parsers\nconst parseBoolean = (v, f=false, t=true) => {\n  return v == null ? f: t;\n}\nconst parseAnyString = (v, alt=null) => {\n  return [null, ''].includes(v) ? alt : v;\n}\n\nconst useQuery = (parsers) => {\n  const query = new URLSearchParams(useLocation().search);\n  // Basically accept any value that doesn't parse as null\n  return Object.entries(parsers).reduce((result, [key, parser]) => {\n    const value = parser(query.get(key));\n    if (value !== null) {\n      result[key] = value;\n    }\n    return result; \n  }, {});\n}\n\nconst configureProps = (props) => {\n  // The slug defines the header and valid query parameters\n  return (({slug}) => {\n    const parsers = {\n      'row': (v) => parseBoolean(v, 'column', 'row') \n    };\n    if (slug[0] === 'dex') {\n      return {\n        navigation: 'dex',\n        parsers: {\n          ...parsers,\n          'n': parseAnyString\n        }\n      };\n    }\n    return {\n      navigation: 'home',\n      parsers: {\n        ...parsers,\n        'url': (v) => parseAnyString(v)\n      }\n    };\n  })(props);\n}\n\nconst formatDexLink = (n) => {\n  return `/dex?n=${n}`;\n}\n\nfunction RenderOutput(props) {\n  const lastPokemon = 1000;\n  const [speciesIndex, setSpeciesIndex] = useState(NaN);\n  const [speciesName, setSpeciesName] = useState('Loading...');\n\n  const config = configureProps(props);\n  config.query = useQuery(config.parsers);\n  // Configure the navigation\n  const header = (({navigation, query}) => {\n    if (navigation === 'dex') {\n      const nullPokemon = isNaN(speciesIndex);\n      const prefix = nullPokemon? `#???` : `#${speciesIndex}`;\n      const nextIndex = nullPokemon? 1 : (\n        Math.max(1, (speciesIndex + 1) % (lastPokemon + 1))\n      );\n      const next = formatDexLink(nextIndex);\n      return (\n        <div className={styles.flex_row}>\n          <span>\n            <Link to='/'>Home</Link>\n          </span>\n          <span>\n            <strong>{prefix} {speciesName}</strong>\n          </span>\n          <span>\n            Next:  <Link to={next}>#{nextIndex}</Link>\n          </span>\n        </div>\n      );\n    }\n    const randomIndex = Math.ceil(Math.random() * lastPokemon);\n    const random = formatDexLink(randomIndex);\n    return (\n      <div className={styles.flex_row}>\n        <div className={styles.padded_header}>\n        Try this Pokémon: <Link to={random}>#{randomIndex}</Link>\n        </div>\n      </div>\n    );\n  })(config);\n\n  // Configure the main output\n  const output = ((input) => {\n    const {query, navigation} = input;\n    const alignment = query.row;\n\n    if (navigation === 'dex') {\n      const {n} = query;\n      return (\n        <DexOutput alignment={alignment}\n          setSpeciesIndex={setSpeciesIndex}\n          setSpeciesName={setSpeciesName}\n          n={n || ''}\n        ></DexOutput>\n      );\n    }\n    const {url} = query;\n    if (!url) {\n      return (\n        <div className={styles.n898}>\n          <div className={styles.flex_column}>\n          {[...Array(lastPokemon).keys()].map((i)=> {\n            const dexIndex = i + 1;\n            const dexLink = formatDexLink(dexIndex);\n            return (\n              <div key={dexIndex}>\n                <Link to={dexLink}>Dex #{dexIndex}</Link>\n              </div>\n           )\n          })}\n          </div>\n        </div>\n      );\n    }\n    return (\n      <UrlOutput alignment={alignment}\n        url={url || ''}\n      ></UrlOutput>\n    );\n  })(config);\n\n  return (\n    <div>\n      <div>\n        {header}\n      </div>\n      <div>\n        {output}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/dex\">\n            <RenderOutput slug={['dex']}>\n            </RenderOutput>\n          </Route>\n          <Route path=\"/\">\n            <RenderOutput slug={[]}>\n            </RenderOutput>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}