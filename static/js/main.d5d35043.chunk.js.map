{"version":3,"sources":["containers/App.module.css","containers/Output.module.css","containers/OutputLine.js","containers/OutputChar.js","functions/ConstUpdaters.js","containers/Output.js","containers/UrlOutput.js","containers/DexOutput.js","containers/App.js","index.js"],"names":["module","exports","OutputLine","nextProps","nextState","canRender","clientWidth","this","props","id","enqueueLineUpdate","cls","stl","children","style","className","ref","el","width","getBoundingClientRect","checkWidth","Component","OutputChar","constMapInsert","a","i","v","Map","constListReplace","map","_v","_i","makeNewLine","line","numRenders","elWidthDiff","elWidth","makeNewLines","num","Array","keys","readLastChar","lineState","slice","copyWidthMap","widthMap","char","has","Math","abs","minFloor","v0","v1","floor","min","sameFloor","indexLabel","label","offset","length","debounceAsync","fn","t","debounced","debounce","args","Promise","resolve","apply","then","result","catch","Output","readMaskShape","w","h","window","innerWidth","innerHeight","idealWidth","initialHeight","lines","state","fontSize","idealHeight","maxWidth","maxHeight","updateShape","bind","resetLines","addCharsToLine","addCharToLine","lineQueue","output","height","ratio_width","ratio_height","getShape","increment","getLabel","prior","reduce","off","done","sumWidth","offWidth","get","max","alignment","space","getNextOffsetByColumn","getNextOffset","newChar","newLine","lineIdx","maxLines","getMaxLines","widthRatio","heightRatio","getRatios","input","readMaskPixel","checkRatios","ratios","maskWidth","maskHeight","getNextChar","hiddenChars","concat","nextChar","readMask","iMax","charWidth","nextWidth","some","x","canLineRender","allReady","split","hiddenLine","listHiddenChars","stepSize","setState","updateLine","onLineUpdate","newState","oldShape","numLines","addEventListener","onColumnUpdate","p","outlineStyle","centerStyle","outline","styles","lineStyle","top","ii","grid","UrlOutput","missing","y","GENERATIONS","parseLangList","list","property","langMap","lang","value","key","language","name","set","parseGeneration","generation","roman","toLowerCase","indexOf","Pokemon","params","names","genera","varieties","nameLangMap","genusLangMap","hasGenderDiff","has_gender_differences","hasGender","gender_rate","variety","pokemon","is_default","vDefault","vMap","sprites","varietyMap","varietyDefault","sprite","url","splitLabel","side","gender","includes","canvas","spriteData","Object","entries","l0","k0","l1","k1","l2","k2","v2","newSpriteList","source","l3","k3","v3","sort","sortChoices","items","choices","item","choiceIndex","ab","functions","diff","spriteIndex","getSprites","setSprites","index","reject","getSprite","spriteImage","Image","crossOrigin","onload","document","createElement","getContext","drawImage","onerror","noUrl","what","SpriteException","src","context","getImageData","data","makeEmptyPokemon","parseAbsoluteInteger","alt","parseInt","isNaN","DexException","message","DexOutput","dex","Pokedex","n","loadPokemon","pokemonOrNameOrNumber","spriteCall","isSameSpecies","isSameVariety","s","nNumber","NaN","isZero","nameOrNumber","getPokemonSpeciesByName","getPokemonByName","parseSpriteData","isSameSprite","loadSprite","loadPokemonSpecies","console","error","validVariety","every","loadPokemonSprites","loadPokemonSprite","setSprite","setSpeciesName","getName","setSpeciesIndex","readSpriteMaskPixel","toLocaleLowerCase","parseAnyString","formatDexLink","RenderOutput","useState","speciesIndex","speciesName","config","parsers","parseBoolean","slug","navigation","configureProps","query","URLSearchParams","useLocation","search","parser","useQuery","header","nullPokemon","prefix","nextIndex","next","flex_row","to","randomIndex","ceil","random","padded_header","row","n898","flex_column","dexIndex","dexLink","App","basename","process","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d5d35043.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"n898\":\"App_n898__24EbZ\",\"flex_row\":\"App_flex_row__1Y8r1\",\"flex_column\":\"App_flex_column__3fFxP\",\"padded_header\":\"App_padded_header__18P3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outline\":\"Output_outline__30pg-\",\"line\":\"Output_line__3suFW\",\"grid\":\"Output_grid__2lwKT\"};","import React, { Component } from 'react';\n\nclass OutputLine extends Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {canRender} = nextProps;\n    return canRender;\n  }\n\n  checkWidth(clientWidth) {\n    const {id, enqueueLineUpdate} = this.props;\n    enqueueLineUpdate(id, clientWidth);\n  }\n\n  render() {\n    const {cls, stl} = this.props;\n    const {children} = this.props;\n    return (\n      <div style={stl} className={cls}\n        ref={(el) => {\n          if (el) {\n          const {width} = el.getBoundingClientRect();\n            this.checkWidth(width);\n          }\n        }}\n      >\n        {children}\n        <br/>\n      </div>\n    );\n  }\n}\nexport default OutputLine;\n","import React, { Fragment, Component } from 'react';\n\nclass OutputChar extends Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const oldChar = this.props.children;\n    const newChar = nextProps.children;\n    return oldChar !== newChar;\n  }\n\n  render() {\n    const {children} = this.props;\n    if (children === ' ') {\n      return (\n        <Fragment>&nbsp;</Fragment>\n      );\n    }\n    return children;\n  }\n}\nexport default OutputChar;\n","const constMapInsert = (a, i, v) => {\n  return new Map([ ...a, [i, v] ]);\n};\n\nconst constListReplace = (a, i, v) => {\n  return a.map((_v, _i) => {\n    return (_i === i) ? v : _v;\n  });\n}\n\nexport {\n  constMapInsert,\n  constListReplace\n}\n","import React, { Component } from 'react';\nimport debounce from 'debounce-async';\nimport styles from './Output.module.css';\nimport OutputLine from './OutputLine';\nimport OutputChar from './OutputChar';\nimport {\n  constMapInsert, constListReplace\n} from '../functions/ConstUpdaters';\n\n/*\nconst sleep = async (ms) => {\n  return await ((ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  })();\n}*/\nconst MAGIC_HEIGHT = 950;\n\nconst makeNewLine = (line=[]) => {\n  return {\n    numRenders: 0,\n    elWidthDiff: 0,\n    elWidth: 0,\n    line: line\n  }\n}\n\nconst makeNewLines = (num) => {\n  const numRange = [...Array(num).keys()];\n  return numRange.map(()=>{\n    return makeNewLine([]);\n  })\n} \n\nconst readLastChar = (lineState) => {\n  const {line} = lineState;\n  return line.slice(-1)[0];\n}\n\nconst copyWidthMap = (widthMap, char, elWidthDiff) => {\n  if (char && elWidthDiff !== 0 && !widthMap.has(char)) {\n    return constMapInsert(widthMap, char, Math.abs(elWidthDiff));\n  }\n  return widthMap;\n}\n\nconst minFloor = (v0, v1) => {\n  return Math.floor(Math.min(v0, v1));\n}\n\nconst sameFloor = (v0, v1) => {\n  return Math.floor(v0) === Math.floor(v1);\n}\n\nconst indexLabel = (label, offset) => {\n  return label[offset % label.length];\n}\n\nconst debounceAsync = (fn, t) => {\n  const debounced = debounce(fn, t);\n  return async function(...args) {\n    return await new Promise((resolve)=>{\n      debounced.apply(this, args)\n        .then((result)=>{resolve(result)})\n        .catch(()=>{resolve(null)});\n    });\n  }\n}\n\nclass Output extends Component {\n  constructor(props) {\n    super(props);\n    const fontSize = 16;\n    const [w, h] = this.props.readMaskShape();\n    const idealHeight = MAGIC_HEIGHT;\n    const {innerWidth, innerHeight} = window;\n    const idealWidth = Math.floor(idealHeight * w / h);\n    const initialHeight = minFloor(idealHeight, innerHeight); \n    const lines = makeNewLines(Math.floor(initialHeight / fontSize));\n    this.state = {\n      lines,\n      fontSize,\n      idealWidth,\n      idealHeight,\n      maxWidth: Math.floor(innerWidth),\n      maxHeight: Math.floor(innerHeight),\n      canRender: true,\n      widthMap: new Map()\n    };\n    this.updateShape = debounceAsync(this.updateShape, 333).bind(this);\n    this.resetLines = debounceAsync(this.resetLines, 333).bind(this);\n    this.enqueueLineUpdate = this.enqueueLineUpdate.bind(this);\n    this.addCharsToLine = this.addCharsToLine.bind(this);\n    this.addCharToLine = this.addCharToLine.bind(this);\n    this.lineQueue = Promise.resolve(true);\n  }\n\n  getShape() {\n    const [w, h] = this.props.readMaskShape();\n    const {idealWidth, idealHeight} = this.state;\n    const {maxWidth, maxHeight} = this.state;\n    const output = {\n      width: minFloor(idealWidth, maxWidth),\n      height: minFloor(idealHeight, maxHeight)\n    };\n    const ratio_width = Math.floor(output.height * w / h);\n    const ratio_height = Math.floor(output.width * h / w);\n    if (ratio_width < output.width) {\n      return {\n        ...output,\n        width: ratio_width \n      }\n    }\n    if (ratio_height < output.height) {\n      return {\n        ...output,\n        height: ratio_height\n      }\n    }\n    return output;\n  }\n\n  getMaxLines() {\n    const {fontSize} = this.state;\n    const {height} = this.getShape();\n    return Math.floor(height / fontSize);\n  }\n\n  newLine(line=[]) {\n    return makeNewLine(line);\n  }\n\n  newChar({offset=-1, char='?'}) {\n    // Offset of -1 means hidden\n    return {\n      offset: offset,\n      char: char\n    };\n  }\n\n  getLabel() {\n    return this.props.label || '?';\n  }\n\n  getNextOffsetByColumn(lineState, increment) {\n    const {elWidth} = lineState;\n    const {width} = this.getShape();\n    const {widthMap} = this.state;\n    const label = this.getLabel();\n    const maxRange = [...Array(width).keys()];\n    const {prior} = maxRange.reduce((result, off) => {\n      const {done, prior, sumWidth} = result;\n      const offWidth = widthMap.get(indexLabel(label, off)) || 0;\n      if (done || sumWidth + offWidth > elWidth + offWidth/2) {\n        return {done: true, prior, sumWidth};\n      }\n      return {\n        prior: off,\n        done: false,\n        sumWidth: sumWidth + offWidth\n      }\n    }, {\n      prior: -1,\n      sumWidth: 0,\n      done: false\n    });\n    return Math.max(prior + increment, 0);\n  }\n\n  getNextOffset(lineState, increment) {\n    const {offset} = readLastChar(lineState) || {\n      offset: -1\n    };\n    return Math.max(offset + increment, 0);\n  }\n\n  getNextChar(lineState, increment) {\n    const label = this.getLabel();\n    const {alignment, space} = this.props;\n    const offset = (()=>{\n      if (alignment === 'column' && increment > 0) {\n        const {char} = readLastChar(lineState) || {};\n        if (char === space) {\n          return this.getNextOffsetByColumn(lineState, increment);\n        }\n      }\n      return this.getNextOffset(lineState, increment);\n    })();\n    const char = indexLabel(label, offset);\n    return this.newChar({offset, char});\n  }\n\n  getLastLine(lines) {\n    return lines.slice(-1)[0] || this.newLine();\n  }\n\n  getRatios(elWidth, lineIdx) {\n    const maxLines = this.getMaxLines();\n    const {width} = this.getShape();\n    return {\n      widthRatio: elWidth / width,\n      heightRatio: (lineIdx + 0.5) / maxLines\n    };\n  }\n\n  checkRatios(elWidth, lineIdx) {\n    const {widthRatio, heightRatio} = this.getRatios(elWidth, lineIdx);\n    if (widthRatio > 1 || heightRatio > 1) {\n      return false;\n    }\n    return true;\n  }\n\n  readMask(input) {\n    const {readMaskPixel, readMaskShape} = this.props;\n    const {lineState, lineIdx} = input;\n    const {elWidth} = lineState;\n    if (!this.checkRatios(elWidth, lineIdx)) {\n      return null;\n    }\n    const ratios = this.getRatios(elWidth, lineIdx);\n    const [maskWidth, maskHeight] = readMaskShape();\n    const {widthRatio, heightRatio} = ratios;\n\n    // Convert element coords to mask coords\n    const x = Math.floor(widthRatio * maskWidth);\n    const y = Math.floor(heightRatio * maskHeight);\n\n    // Return correct character\n    if (readMaskPixel(x,y)) {\n      const {space} = this.props;\n      return this.newChar({\n        offset: this.getNextOffset(lineState, 0),\n        char: space\n      });\n    }\n    return this.getNextChar(lineState, 1);\n  }\n\n  addCharToLine(input, i) {\n    if (input.done) {\n      return input;\n    }\n\n    const {lineState, hiddenChars} = input;\n    if (hiddenChars.length > 0 && lineState.line.length > 0) {\n      return {\n        ...input,\n        done: true,\n        lineState: {\n          ...lineState,\n          line: lineState.line.concat([\n            hiddenChars.slice(-1)[0]\n          ]),\n        },\n        hiddenChars: hiddenChars.slice(0,-1)\n      };\n    }\n\n    const nextChar = this.readMask(input);\n    if (nextChar === null) {\n      return input;\n    }\n    const {char} = nextChar;\n    const {lineIdx, iMax} = input;\n    const {elWidth} = lineState;\n    const {widthMap} = this.state;\n    const charWidth = widthMap.get(char) || 0;\n    const nextWidth = elWidth + charWidth;\n    const inBounds = this.checkRatios(nextWidth, lineIdx);\n    if (!inBounds) {\n      return {\n        ...input,\n        done: true\n      }\n    }\n\n    const done = [\n      i === iMax, // final character estimate\n      charWidth < 1 // no valid character estimate\n    ].some(x=>x);\n\n    return {\n      ...input,\n      lineState: {\n        ...lineState,\n        line: lineState.line.concat([nextChar]),\n        elWidth: (done ? elWidth : nextWidth)\n      },\n      done\n    };\n  }\n\n  addCharsToLine(input, lineState, lineIdx) {\n    const {num, lines, hiddenChars} = input;\n    // Line is ready to go\n    if (!this.canLineRender(lineState)) {\n      return input;\n    }\n\n    const numRange = [...Array(num).keys()];\n    const output = numRange.reduce(this.addCharToLine, {\n      iMax: num - 1, done: false, lineState, lineIdx,\n      hiddenChars: hiddenChars\n    });\n\n    return {\n      ...input,\n      allReady: false,\n      hiddenChars: output.hiddenChars,\n      lines: constListReplace(lines, lineIdx, output.lineState),\n    };\n  }\n\n  listHiddenChars() {\n    const {space} = this.props;\n    const label = this.getLabel();\n    const {widthMap} = this.state;\n    const neededChars = label.split('').concat([space]);\n    return neededChars.reduce((hiddenLine, char) => {\n      if (widthMap.has(char)) {\n        return hiddenLine;\n      }\n      return [\n        this.newChar({\n          char: char,\n          offset: -1\n        }),\n        ...hiddenLine\n      ];\n    }, []);\n  }\n\n  onColumnUpdate() {\n    return new Promise((resolve) => {\n      const {lines} = this.state;\n      const output = lines.reduce(this.addCharsToLine, {\n        hiddenChars: this.listHiddenChars(),\n        num: this.props.stepSize,\n        allReady: true,\n        lines\n      });\n\n      if (output.allReady) {\n        return this.setState({\n          canRender: false,\n        }, resolve);\n      }\n      return this.setState({\n        canRender: true,\n        lines: output.lines,\n      }, resolve);\n    });\n  }\n\n  updateLine(lineState, elWidth) {\n    const {width} = this.getShape();\n    const {numRenders} = lineState;\n    const {offset} = readLastChar(lineState) || {\n      offset: 0\n    };\n    // If at end of line or hidden character\n    if (elWidth > width || offset < 0) {\n      // We will measure a negative element width\n      return {\n        ...lineState,\n        line: lineState.line.slice(0, -1),\n        elWidthDiff: lineState.elWidth - elWidth\n      };\n    }\n    return {\n      ...lineState,\n      elWidth: elWidth,\n      numRenders: numRenders + 1,\n      elWidthDiff: elWidth - lineState.elWidth\n    };\n  }\n\n  onLineUpdate(id, elWidth) {\n    return new Promise((resolve) => {\n      const {lines, widthMap} = this.state;\n      if (id < lines.length) {\n        const {char} = readLastChar(lines[id]) || {};\n        const lineState = this.updateLine(lines[id], elWidth);\n        const {elWidthDiff} = lineState;\n        this.setState({\n          widthMap: copyWidthMap(widthMap, char, elWidthDiff),\n          lines: constListReplace(lines, id, lineState),\n          canRender: false\n        }, resolve);\n      }\n    });\n  }\n\n  enqueueLineUpdate(id, elWidth) {\n    this.lineQueue.then(async () => {\n      return await this.onLineUpdate(id, elWidth);\n    })\n  }\n\n  canLineRender(lineState) {\n    if (!lineState) {\n      return false;\n    }\n    const {numRenders, elWidthDiff} = lineState;\n    const endReached = (\n      numRenders >= 2 && (elWidthDiff === 0)\n    );\n    return !endReached;\n  }\n\n  // debounced\n  async updateShape() {\n    const newState = {};\n    const oldShape = this.getShape();\n    const {maxWidth, maxHeight, fontSize} = this.state;\n    const {innerWidth, innerHeight} = window;\n\n    if (!sameFloor(maxWidth, innerWidth)) {\n      newState.maxWidth = Math.floor(innerWidth);\n    }\n    if (!sameFloor(maxHeight, innerHeight)) {\n      newState.maxHeight = Math.floor(innerHeight);\n    }\n    this.setState(newState, async () => {\n      const {height, width} = this.getShape();\n      // No need to redraw output if the shape has not changed\n      if (oldShape.height === height && oldShape.width === width) {\n        return;\n      }\n      await this.lineQueue;\n      const numLines = Math.floor(height / fontSize);\n      this.setState({\n        canRender: true,\n        lines: makeNewLines(numLines)\n      });\n    });\n  }\n\n  // debounced\n  async resetLines() {\n    const {readMaskShape} = this.props;\n    const {idealHeight} = this.state;\n    const [w, h] = readMaskShape();\n    await this.lineQueue;\n    this.setState({\n      canRender: false,\n      idealWidth: Math.floor(idealHeight * w / h)\n    }, () => {\n      const {fontSize} = this.state;\n      const {height} = this.getShape();\n      const numLines = Math.floor(height / fontSize);\n      this.setState({\n        canRender: true,\n        lines: makeNewLines(numLines),\n      });\n    });\n  }\n\n  async componentDidMount() {\n    window.addEventListener('resize', async() => {\n      await this.updateShape();\n    });\n    await this.onColumnUpdate();\n  }\n\n  async componentDidUpdate() {\n    //await sleep(1); //sleep helps debug in dev mode\n    await this.lineQueue;\n    await this.onColumnUpdate();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const propsList = [\n      'alignment', 'label', 'space', 'stepSize'\n    ]\n    // Redraw completely if props change\n    const mustReset = propsList.map((p)=> {\n      return this.props[p] !== nextProps[p];\n    }).some(x => !!x);\n    if (mustReset) {\n      this.resetLines();\n      return false;\n    }\n    // Only update if can render\n    const {canRender} = nextState;\n    return canRender;\n  }\n\n  render() {\n    const {fontSize} = this.state;\n    const {lines} = this.state;\n    const {width, height} = this.getShape();\n\n    const outlineStyle = {\n      fontSize: `${fontSize}px`,\n    };\n    const centerStyle = {\n      'width': `${width}px`,\n      'height': `${height}px`\n    };\n\n    const outline = (\n      <div style={outlineStyle} className={styles.outline}>\n        {lines.map((lineState, i) => {\n          const lineStyle ={\n            top: i * fontSize\n          };\n          return (\n            <OutputLine enqueueLineUpdate={this.enqueueLineUpdate}\n              canRender={this.canLineRender(lineState)}\n              stl={lineStyle} cls={styles.line} key={i} id={i}\n            >\n              {lineState.line.map(({char}, ii) => {\n                return (\n                  <OutputChar key={ii}>\n                    {char}\n                  </OutputChar>\n                );\n              })}\n            </OutputLine>\n          );\n        })}\n      </div>\n    );\n    return (\n      <div className={styles.grid}>\n        <div></div>\n        <div style={centerStyle}>\n          {outline}\n        </div>\n        <div></div>\n      </div>\n    )\n  }\n}\nexport default Output;\n","import React, { Component } from 'react';\nimport Output from './Output.js';\n\nclass UrlOutput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.missing = [\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,0,0,0,0,0,0,0],\n    ];\n    this.readMaskPixel = this.readMaskPixel.bind(this);\n    this.readMaskShape = this.readMaskShape.bind(this);\n  }\n\n  readMaskPixel(x,y) {\n    return !!this.missing[y][x];\n  }\n\n  readMaskShape() {\n    return [\n      this.missing[0].length, \n      this.missing.length\n    ];\n  }\n\n  render() {\n    const {alignment} = this.props;\n    return (\n      <Output space=' ' stepSize={100}\n        readMaskShape={this.readMaskShape}\n        readMaskPixel={this.readMaskPixel}\n        alignment={alignment}\n        label='Missing url! '\n      >\n      </Output>\n    )\n  }\n}\nexport default UrlOutput;\n","import React, { Component } from 'react';\nimport {Pokedex} from 'pokeapi-js-wrapper';\nimport Output from './Output.js';\nimport {\n  constMapInsert, constListReplace\n} from '../functions/ConstUpdaters';\n\nconst GENERATIONS = [\n  '','i','ii','iii','iv','v','vi','vii','viii', // as of 2021\n  'ix', 'x', 'xi', 'xii', 'xiii', 'xiv', 'xv', // until ~2042\n  'xvi', 'xvii', 'xviii', 'xix', 'xx', 'xxi' // until ~2060\n];\n\nconst parseLangList = (list, property) => {\n  const extractor = (langMap, lang) => {\n    const value = lang[property];\n    const {language} = lang;\n    const key = language.name;\n    if (key && value) {\n      langMap.set(key, value);\n    }\n    return langMap;\n  }\n  return list.reduce(extractor, new Map([]));\n}\n\nconst parseGeneration = (generation) => {\n  const roman = generation.split('-').slice(-1)[0].toLowerCase();\n  return GENERATIONS.indexOf(roman) || 0;\n}\n\nclass Pokemon {\n  constructor(params) {\n    const {name, id, names, genera, varieties} = params;\n    this.id = id;\n    this.name = name;\n    this.nameLangMap = parseLangList(names, 'name');\n    this.genusLangMap = parseLangList(genera, 'genus');\n    this.hasGenderDiff = params.has_gender_differences || false;\n    this.hasGender = (params.gender_rate || 0) !== -1;\n    this.generation = parseGeneration(params.generation?.name || '');\n    // Each pokemon species may have multiple varieties\n    const {vMap, vDefault} = varieties.reduce((result, variety) => {\n      const value = variety.pokemon || {};\n      if (value.name) {\n        if (variety.is_default) {\n          result.vDefault = value.name;\n        }\n        result.vMap.set(value.name, {\n          // Each variety may have many sprites\n          sprites: []\n        });\n      }\n      return result;\n    }, {\n      vDefault: null,\n      vMap: new Map([])\n    });\n    this.varietyMap = vMap;\n    this.varietyDefault = vDefault;\n  }\n  getName(lang) {\n    return this.nameLangMap.get(lang) || this.name;\n  }\n  getGenus(lang) {\n    return this.genusLangMap.get(lang) || null;\n  }\n\n  newSpriteList(sprite, label, url) {\n    const splitLabel = label.split('_');\n    const [side, gender] = splitLabel;\n    if (splitLabel.length !== 2 || !url) {\n      return [];\n    }\n    // ignore shiny or grayscale sprites\n    if (['shiny', 'gray'].includes(gender)) {\n      return [];\n    }\n    return [{\n      ...sprite,\n      gender: {\n        'default': this.hasGender ? 'male' : 'none'\n      }[gender] || gender,\n      canvas: null,\n      side: side,\n      url: url\n    }];\n  }\n\n  parseSpriteData(spriteData) {\n    return Object.entries(spriteData || {}).reduce((l0, [k0, v0])=>{\n      if (k0 === 'other') {\n        return Object.entries(v0 || {}).reduce((l1, [k1, v1]) => {\n          return Object.entries(v1 || {}).reduce((l2, [k2, v2]) => {\n            return l2.concat(this.newSpriteList({\n                generation: {\n                  'dream_world': 5\n                }[k1] || this.generation,\n                source: k1\n              }, k2, v2\n            ));\n          }, l1);\n        }, l0);\n      }\n      else if (k0 === 'versions') {\n        return Object.entries(v0 || {}).reduce((l1, [k1, v1]) => {\n          return Object.entries(v1 || {}).reduce((l2, [k2, v2]) => {\n            return Object.entries(v2 || {}).reduce((l3, [k3, v3]) => {\n              if (k2 === 'icons') {\n                return l3;\n              }\n              return l3.concat(this.newSpriteList({\n                  generation: parseGeneration(k1),\n                  source: k2\n                }, k3, v3\n              ));\n            }, l2);\n          }, l1);\n        }, l0);\n      }\n      return l0.concat(this.newSpriteList({\n          generation: 0,\n          source: 'default'\n        }, k0, v0\n      ));\n    },[]).sort((...ab) => {\n      const sortChoices = (items, key, choices=null) => {\n        return () => {\n          const [a,b] = items.slice(0,2).map((item) => {\n            if (choices === null) {\n              return item[key];\n            }\n            const choiceIndex = choices.indexOf(item[key]);\n            return choiceIndex !== -1 ? choiceIndex : choices.length;\n          });\n          return a - b;\n        }\n      }\n      const functions = [\n        sortChoices(ab, 'side', [\n          'front', 'back'\n        ]),\n        sortChoices(ab, 'source', [\n          'official-artwork', 'dream_world', 'default'\n        ]),\n        sortChoices(ab, 'generation', null),\n        sortChoices(ab, 'gender', [\n          'none', 'female', 'male'\n        ]),\n      ]\n      for (let fn of functions) {\n        const diff = fn();\n        if (diff !== 0) {\n          return diff;\n        }\n      }\n      return 0;\n    });\n  }\n\n  setSprites(variety, sprites) {\n    this.varietyMap = constMapInsert(this.varietyMap, variety, {\n      sprites: sprites\n    });\n  }\n\n  setSprite(variety, spriteIndex=0, sprite=null) {\n    if (sprite) {\n      const sprites = constListReplace(\n        this.getSprites(variety), spriteIndex, sprite\n      );\n      this.setSprites(variety, sprites);\n    }\n  }\n\n  getSprites(variety) {\n    const varietyState = this.varietyMap.get(variety) || {};\n    return varietyState.sprites || [];\n  }\n\n  getSprite(variety, index=0) {\n    return this.getSprites(variety)[index] || null;\n  }\n\n  loadSprite(variety, index=0) {\n    return new Promise((resolve, reject) => {\n      const sprite = this.getSprite(variety, index=0) || {};\n      const {url} = sprite;\n      if (!url) {\n        reject({url: ''});\n      }\n      const spriteImage = new Image();\n      spriteImage.crossOrigin = \"Anonymous\";\n      spriteImage.onload = async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = spriteImage.width;\n        canvas.height = spriteImage.height;\n        canvas.getContext('2d').drawImage(spriteImage,0,0);\n        resolve({\n          ...sprite,\n          canvas: canvas\n        });\n      };\n      spriteImage.onerror = () => {\n        const noUrl = !url.length;\n        const what = 'sprite url';\n        reject(new SpriteException(\n          [`Invalid ${what}: ${url}`, `No ${what}`][+noUrl]\n        ));\n      }\n      \n      spriteImage.src = url; \n    });\n  }\n\n  readSpriteMaskPixel(variety, index=0, x, y) {\n    const {canvas} = this.getSprite(variety, index) || {};\n    if (!canvas) {\n      return false;\n    }\n    const context = canvas.getContext('2d');\n    const {data} = context.getImageData(x, y, 1, 1) || {};\n    if (!data) {\n      return false;\n    }\n    // Truee if greater than half alpha\n    return data[3] >= 127;\n  }\n}\n\nconst makeEmptyPokemon = () => {\n  return new Pokemon({\n    id: 0,\n    name: '',\n    names: [\n      {\"language\":{\"name\":\"de\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"en\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"es\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"fr\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"it\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"ja\"},\"name\":\"けつばん\"},\n      {\"language\":{\"name\":\"ja-Hrkt\"},\"name\":\"けつばん\"},\n      {\"language\":{\"name\":\"ko\"},\"name\":\"미싱노\"},\n      {\"language\":{\"name\":\"roomaji\"},\"name\":\"Ketsuban\"},\n      {\"language\":{\"name\":\"zh-Hans\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"zh-Hant\"},\"name\":\"MissingNo.\"}\n    ],\n    genera: [],\n    varieties: [],\n    gender_rate: -1,\n    generation: 'i',\n    has_gender_differences: false\n  });\n}\n\nconst parseAbsoluteInteger = (v, alt=null) => {\n  return ((i)=> !isNaN(i) ? Math.abs(i) : alt)(parseInt(v));\n}\n\nfunction DexException(message) {\n  this.name = 'DexException';\n  this.message = message;\n}\n\nfunction SpriteException(message) {\n  this.name = 'SpriteException';\n  this.message = message;\n}\n\nclass DexOutput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lang: 'en',\n      variety: null,\n      spriteIndex: 0,\n      pokemon: makeEmptyPokemon()\n    };\n    this.dex = new Pokedex();\n    this.missing = [\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,0,0,0,0,0,0,0],\n    ];\n    this.readMaskPixel = this.readMaskPixel.bind(this);\n    this.readMaskShape = this.readMaskShape.bind(this);\n  }\n\n  componentDidMount() {\n    const {n} = this.props;\n    const {variety, spriteIndex} = this.state;\n    // This call is non-blocking\n    this.loadPokemon(n, variety, spriteIndex);\n  }\n\n  componentDidUpdate() {\n    const {n} = this.props;\n    const {variety, spriteIndex} = this.state;\n    // This call is non-blocking\n    this.loadPokemon(n, variety, spriteIndex);\n  }\n\n  isSameSpecies(pokemonOrNameOrNumber) {\n    // Flexible type for input\n    const n = ((value) => {\n      if (value instanceof Pokemon) {\n        return value.id;\n      }\n      return value;\n    })(pokemonOrNameOrNumber);\n\n    return this.spriteCall(({p}) => {\n      return [p.name, p.id].includes(n);\n    });\n  }\n\n  isSameVariety(pokemon, variety) {\n    if (!this.isSameSpecies(pokemon)) {\n      return false;\n    }\n    return this.spriteCall(({v}) => {\n      return v === variety;\n    })\n  }\n\n  isSameSprite(pokemon, variety, spriteIndex) {\n    if (!this.isSameVariety(pokemon, variety)) {\n      return false;\n    }\n    return this.spriteCall(({s}) => {\n      return s === spriteIndex;\n    })\n  }\n\n  async loadPokemonSpecies(n) {\n    const nNumber = parseAbsoluteInteger(n, NaN);\n    const isZero = nNumber === 0;\n    const isEmpty = n.length === 0;\n    if (isEmpty) {\n      throw new DexException('No species name or dex number!');\n    }\n    if (isZero) {\n      throw new DexException('Invalid dex number!');\n    }\n    const nameOrNumber = isNaN(nNumber)? n.toLowerCase() : nNumber;\n    const newSpecies = !this.isSameSpecies(nameOrNumber);\n    // Don't bother reloading the same species\n    const pokemon = newSpecies? new Pokemon(\n      await this.dex.getPokemonSpeciesByName(nameOrNumber)\n    ) : this.spriteCall(({p}) => p);\n    // Always return pokemon\n    return pokemon; \n  }\n\n  async loadPokemonSprites(pokemon, variety) {\n    // Don't bother reloading the same variety\n    if (this.isSameVariety(pokemon, variety)) {\n      return pokemon.getSprites(variety);\n    }\n    return pokemon.parseSpriteData(\n      (await this.dex.getPokemonByName(variety)).sprites\n    )\n  }\n\n  async loadPokemonSprite(pokemon, variety, spriteIndex) {\n    // Don't bother reloading the same sprite\n    if (this.isSameSprite(pokemon, variety, spriteIndex)) {\n      return pokemon.getSprite(variety, spriteIndex);\n    }\n    return await pokemon.loadSprite(variety, spriteIndex);\n  }\n\n  async loadPokemon(n, v=null, spriteIndex=0) {\n    const {lang} = this.state;\n    const pokemon = await (async () => {\n      try {\n        return await this.loadPokemonSpecies(n);\n      }\n      catch (err) {\n        console.error(err);\n        return makeEmptyPokemon();\n      }\n    })();\n    const validVariety = [\n      v, this.isSameSpecies(pokemon)\n    ].every(x=>!!x);\n    const variety =  validVariety ? v : (\n      pokemon.varietyDefault || pokemon.name\n    );\n\n    // Don't bother setting state if same sprite\n    const sameSprite = this.isSameSprite(\n      pokemon, variety, spriteIndex\n    );\n    if (sameSprite) {\n      return false;\n    }\n    pokemon.setSprites(variety, (\n      await (async () => {\n        try {\n          return await this.loadPokemonSprites(\n            pokemon, variety\n          );\n        }\n        catch (err) {\n          console.error(err); \n          return pokemon.getSprites(variety);;\n        }\n      })()\n    ));\n    pokemon.setSprite(variety, spriteIndex, (\n      await (async () => {\n        try {\n          return await this.loadPokemonSprite(\n            pokemon, variety, spriteIndex\n          );\n        }\n        catch (err) {\n          console.error(err);\n          return null;\n        }\n      })()\n    ));\n    this.setState({\n      spriteIndex: spriteIndex,\n      pokemon: pokemon,\n      variety: variety,\n    });\n    this.props.setSpeciesName(pokemon.getName(lang));\n    this.props.setSpeciesIndex(pokemon.id);\n    return true;\n  }\n\n  spriteCall(fn) {\n    const {pokemon, variety, spriteIndex} = this.state;\n    return fn({\n      p: pokemon,\n      v: variety,\n      s: spriteIndex\n    });\n  }\n\n  readMaskPixel(x,y) {\n    const {canvas} = this.spriteCall(({p,v,s}) => {\n      const sprite = p.getSprite(v,s) || {};\n      return sprite;\n    });\n    if (!canvas) {\n      return !!this.missing[y][x];\n    }\n    return this.spriteCall(({p,v,s}) => {\n      return p.readSpriteMaskPixel(v,s,x,y);\n    });\n  }\n\n  readMaskShape() {\n    const {canvas} = this.spriteCall(({p,v,s}) => {\n      return p.getSprite(v,s) || {};\n    });\n    if (!canvas) {\n      return [\n        this.missing[0].length, \n        this.missing.length\n      ];\n    }\n    return [canvas.width, canvas.height];\n  }\n\n  render() {\n    const {lang} = this.state;\n    const {alignment} = this.props;\n    const label = this.spriteCall(({p}) => {\n      return p.getName(lang) || 'DEX ERR ';\n    });\n\n    return (\n      <div>\n        <Output space=' ' stepSize={100}\n          readMaskShape={this.readMaskShape}\n          readMaskPixel={this.readMaskPixel}\n          label={label.toLocaleLowerCase('en-US')}\n          alignment={alignment}\n        >\n        </Output>\n      </div>\n    )\n  }\n}\nexport default DexOutput;\n","import React, {useState} from \"react\";\nimport {\n  BrowserRouter as Router,\n  useLocation,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport styles from './App.module.css';\nimport UrlOutput from './UrlOutput.js';\nimport DexOutput from './DexOutput.js';\n\n// Query parameter parsers\nconst parseBoolean = (v, f=false, t=true) => {\n  return v == null ? f: t;\n}\nconst parseAnyString = (v, alt=null) => {\n  return [null, ''].includes(v) ? alt : v;\n}\n\nconst useQuery = (parsers) => {\n  const query = new URLSearchParams(useLocation().search);\n  // Basically accept any value that doesn't parse as null\n  return Object.entries(parsers).reduce((result, [key, parser]) => {\n    const value = parser(query.get(key));\n    if (value !== null) {\n      result[key] = value;\n    }\n    return result; \n  }, {});\n}\n\nconst configureProps = (props) => {\n  // The slug defines the header and valid query parameters\n  return (({slug}) => {\n    const parsers = {\n      'row': (v) => parseBoolean(v, 'column', 'row') \n    };\n    if (slug[0] === 'dex') {\n      return {\n        navigation: 'dex',\n        parsers: {\n          ...parsers,\n          'n': parseAnyString\n        }\n      };\n    }\n    return {\n      navigation: 'home',\n      parsers: {\n        ...parsers,\n        'url': (v) => parseAnyString(v)\n      }\n    };\n  })(props);\n}\n\nconst formatDexLink = (n) => {\n  return `/dex?n=${n}`;\n}\n\nfunction RenderOutput(props) {\n  const lastPokemon = 898;\n  const [speciesIndex, setSpeciesIndex] = useState(NaN);\n  const [speciesName, setSpeciesName] = useState('Loading...');\n\n  const config = configureProps(props);\n  config.query = useQuery(config.parsers);\n  // Configure the navigation\n  const header = (({navigation, query}) => {\n    if (navigation === 'dex') {\n      const nullPokemon = isNaN(speciesIndex);\n      const prefix = nullPokemon? `#???` : `#${speciesIndex}`;\n      const nextIndex = nullPokemon? 1 : (\n        Math.max(1, (speciesIndex + 1) % (lastPokemon + 1))\n      );\n      const next = formatDexLink(nextIndex);\n      return (\n        <div className={styles.flex_row}>\n          <span>\n            <Link to='/'>Home</Link>\n          </span>\n          <span>\n            <strong>{prefix} {speciesName}</strong>\n          </span>\n          <span>\n            Next:  <Link to={next}>#{nextIndex}</Link>\n          </span>\n        </div>\n      );\n    }\n    const randomIndex = Math.ceil(Math.random() * lastPokemon);\n    const random = formatDexLink(randomIndex);\n    return (\n      <div className={styles.flex_row}>\n        <div className={styles.padded_header}>\n        Try this Pokémon: <Link to={random}>#{randomIndex}</Link>\n        </div>\n      </div>\n    );\n  })(config);\n\n  // Configure the main output\n  const output = ((input) => {\n    const {query, navigation} = input;\n    const alignment = query.row;\n\n    if (navigation === 'dex') {\n      const {n} = query;\n      return (\n        <DexOutput alignment={alignment}\n          setSpeciesIndex={setSpeciesIndex}\n          setSpeciesName={setSpeciesName}\n          n={n || ''}\n        ></DexOutput>\n      );\n    }\n    const {url} = query;\n    if (!url) {\n      return (\n        <div className={styles.n898}>\n          <div className={styles.flex_column}>\n          {[...Array(lastPokemon).keys()].map((i)=> {\n            const dexIndex = i + 1;\n            const dexLink = formatDexLink(dexIndex);\n            return (\n              <div key={dexIndex}>\n                <Link to={dexLink}>Dex #{dexIndex}</Link>\n              </div>\n           )\n          })}\n          </div>\n        </div>\n      );\n    }\n    return (\n      <UrlOutput alignment={alignment}\n        url={url || ''}\n      ></UrlOutput>\n    );\n  })(config);\n\n  return (\n    <div>\n      <div>\n        {header}\n      </div>\n      <div>\n        {output}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/dex\">\n            <RenderOutput slug={['dex']}>\n            </RenderOutput>\n          </Route>\n          <Route path=\"/\">\n            <RenderOutput slug={[]}>\n            </RenderOutput>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}