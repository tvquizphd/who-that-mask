{"version":3,"sources":["containers/Output.module.css","containers/OutputLine.js","containers/OutputChar.js","functions/ConstUpdaters.js","containers/Output.js","containers/UrlOutput.js","containers/DexOutput.js","containers/App.js","index.js"],"names":["module","exports","OutputLine","nextProps","nextState","canRender","clientWidth","this","props","id","enqueueLineUpdate","cls","stl","children","style","className","ref","el","width","getBoundingClientRect","checkWidth","Component","OutputChar","constMapInsert","a","i","v","Map","constListReplace","map","_v","_i","makeNewLine","line","numRenders","elWidthDiff","elWidth","makeNewLines","num","Array","keys","readLastChar","lineState","slice","copyWidthMap","widthMap","char","has","Math","abs","minFloor","v0","v1","floor","min","sameFloor","indexLabel","label","offset","length","debounceAsync","fn","t","debounced","debounce","args","Promise","resolve","apply","then","result","catch","Output","window","innerWidth","innerHeight","maxWidth","maxHeight","lines","state","idealHeight","idealWidth","fontSize","updateShape","bind","resetLines","addCharsToLine","addCharToLine","lineQueue","height","getShape","increment","getLabel","prior","reduce","off","done","sumWidth","offWidth","get","max","alignment","space","getNextOffsetByColumn","getNextOffset","newChar","newLine","lineIdx","maxLines","getMaxLines","widthRatio","heightRatio","getRatios","input","readMaskPixel","readMaskShape","checkRatios","ratios","maskWidth","maskHeight","getNextChar","hiddenChars","concat","nextChar","readMask","iMax","charWidth","nextWidth","some","x","canLineRender","output","allReady","split","hiddenLine","listHiddenChars","stepSize","setState","updateLine","onLineUpdate","newState","oldShape","numLines","addEventListener","onColumnUpdate","p","outlineStyle","centerStyle","outline","styles","lineStyle","top","ii","grid","UrlOutput","missing","y","GENERATIONS","parseLangList","list","property","langMap","lang","value","key","language","name","set","parseGeneration","generation","roman","toLowerCase","indexOf","Pokemon","params","names","genera","varieties","nameLangMap","genusLangMap","hasGenderDiff","has_gender_differences","hasGender","gender_rate","variety","pokemon","is_default","vDefault","vMap","sprites","varietyMap","varietyDefault","sprite","url","splitLabel","side","gender","includes","canvas","spriteData","Object","entries","l0","k0","l1","k1","l2","k2","v2","newSpriteList","source","l3","k3","v3","sort","sortChoices","items","choices","item","choiceIndex","ab","functions","diff","index","getSprites","reject","getSprite","spriteImage","Image","crossOrigin","onload","document","createElement","getContext","drawImage","setSprites","onerror","src","context","getImageData","data","parseAbsoluteInteger","alt","parseInt","isNaN","DexException","message","DexOutput","invalid","spriteIndex","dex","Pokedex","n","loadPokemon","n0","mon0","undefined","mon1","nNumber","NaN","isZero","isEmpty","nameOrNumber","getPokemonSpeciesByName","console","error","getPokemonByName","parseSpriteData","loadSprite","setSpeciesName","getName","setSpeciesIndex","msg","s","spriteCall","readSpriteMaskPixel","parseAnyString","RenderOutput","useState","speciesIndex","speciesName","config","parsers","parseBoolean","slug","navigation","configureProps","query","URLSearchParams","useLocation","search","parser","useQuery","header","nullPokemon","prefix","nextIndex","next","to","randomIndex","ceil","random","row","App","basename","process","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90bd7a87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"outline\":\"Output_outline__30pg-\",\"line\":\"Output_line__3suFW\",\"grid\":\"Output_grid__2lwKT\"};","import React, { Component } from 'react';\n\nclass OutputLine extends Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {canRender} = nextProps;\n    return canRender;\n  }\n\n  checkWidth(clientWidth) {\n    const {id, enqueueLineUpdate} = this.props;\n    enqueueLineUpdate(id, clientWidth);\n  }\n\n  render() {\n    const {cls, stl} = this.props;\n    const {children} = this.props;\n    return (\n      <div style={stl} className={cls}\n        ref={(el) => {\n          if (el) {\n          const {width} = el.getBoundingClientRect();\n            this.checkWidth(width);\n          }\n        }}\n      >\n        {children}\n        <br/>\n      </div>\n    );\n  }\n}\nexport default OutputLine;\n","import React, { Fragment, Component } from 'react';\n\nclass OutputChar extends Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const oldChar = this.props.children;\n    const newChar = nextProps.children;\n    return oldChar !== newChar;\n  }\n\n  render() {\n    const {children} = this.props;\n    if (children === ' ') {\n      return (\n        <Fragment>&nbsp;</Fragment>\n      );\n    }\n    return children;\n  }\n}\nexport default OutputChar;\n","const constMapInsert = (a, i, v) => {\n  return new Map([ ...a, [i, v] ]);\n};\n\nconst constListReplace = (a, i, v) => {\n  return a.map((_v, _i) => {\n    return (_i === i) ? v : _v;\n  });\n}\n\nexport {\n  constMapInsert,\n  constListReplace\n}\n","import React, { Component } from 'react';\nimport debounce from 'debounce-async';\nimport styles from './Output.module.css';\nimport OutputLine from './OutputLine';\nimport OutputChar from './OutputChar';\nimport {\n  constMapInsert, constListReplace\n} from '../functions/ConstUpdaters';\n\n/*\nconst sleep = async (ms) => {\n  return await ((ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  })();\n}*/\n\nconst makeNewLine = (line=[]) => {\n  return {\n    numRenders: 0,\n    elWidthDiff: 0,\n    elWidth: 0,\n    line: line\n  }\n}\n\nconst makeNewLines = (num) => {\n  const numRange = [...Array(num).keys()];\n  return numRange.map(()=>{\n    return makeNewLine([]);\n  })\n} \n\nconst readLastChar = (lineState) => {\n  const {line} = lineState;\n  return line.slice(-1)[0];\n}\n\nconst copyWidthMap = (widthMap, char, elWidthDiff) => {\n  if (char && elWidthDiff !== 0 && !widthMap.has(char)) {\n    return constMapInsert(widthMap, char, Math.abs(elWidthDiff));\n  }\n  return widthMap;\n}\n\nconst minFloor = (v0, v1) => {\n  return Math.floor(Math.min(v0, v1));\n}\n\nconst sameFloor = (v0, v1) => {\n  return Math.floor(v0) === Math.floor(v1);\n}\n\nconst indexLabel = (label, offset) => {\n  return label[offset % label.length];\n}\n\nconst debounceAsync = (fn, t) => {\n  const debounced = debounce(fn, t);\n  return async function(...args) {\n    return await new Promise((resolve)=>{\n      debounced.apply(this, args)\n        .then((result)=>{resolve(result)})\n        .catch(()=>{resolve(null)});\n    });\n  }\n}\n\nclass Output extends Component {\n  constructor(props) {\n    super(props);\n    const fontSize = 16;\n    const [idealWidth, idealHeight] = [450, 950];\n    const {innerWidth, innerHeight} = window;\n    const maxWidth = minFloor(idealWidth, innerWidth);\n    const maxHeight = minFloor(idealHeight, innerHeight); \n    const lines = makeNewLines(Math.floor(maxHeight / fontSize));\n    this.state = {\n      lines,\n      idealHeight,\n      idealWidth,\n      maxHeight,\n      maxWidth,\n      fontSize,\n      canRender: true,\n      widthMap: new Map()\n    };\n    this.updateShape = debounceAsync(this.updateShape, 333).bind(this);\n    this.resetLines = debounceAsync(this.resetLines, 333).bind(this);\n    this.enqueueLineUpdate = this.enqueueLineUpdate.bind(this);\n    this.addCharsToLine = this.addCharsToLine.bind(this);\n    this.addCharToLine = this.addCharToLine.bind(this);\n    this.lineQueue = Promise.resolve(true);\n  }\n\n  getShape() {\n    const {idealWidth, idealHeight} = this.state;\n    const {maxWidth, maxHeight} = this.state;\n    return {\n      width: minFloor(idealWidth, maxWidth),\n      height: minFloor(idealHeight, maxHeight)\n    }\n  }\n\n  getMaxLines() {\n    const {fontSize} = this.state;\n    const {height} = this.getShape();\n    return Math.floor(height / fontSize);\n  }\n\n  newLine(line=[]) {\n    return makeNewLine(line);\n  }\n\n  newChar({offset=-1, char='?'}) {\n    // Offset of -1 means hidden\n    return {\n      offset: offset,\n      char: char\n    };\n  }\n\n  getLabel() {\n    return this.props.label || '?';\n  }\n\n  getNextOffsetByColumn(lineState, increment) {\n    const {elWidth} = lineState;\n    const {width} = this.getShape();\n    const {widthMap} = this.state;\n    const label = this.getLabel();\n    const maxRange = [...Array(width).keys()];\n    const {prior} = maxRange.reduce((result, off) => {\n      const {done, prior, sumWidth} = result;\n      const offWidth = widthMap.get(indexLabel(label, off)) || 0;\n      if (done || sumWidth + offWidth > elWidth + offWidth/2) {\n        return {done: true, prior, sumWidth};\n      }\n      return {\n        prior: off,\n        done: false,\n        sumWidth: sumWidth + offWidth\n      }\n    }, {\n      prior: -1,\n      sumWidth: 0,\n      done: false\n    });\n    return Math.max(prior + increment, 0);\n  }\n\n  getNextOffset(lineState, increment) {\n    const {offset} = readLastChar(lineState) || {\n      offset: -1\n    };\n    return Math.max(offset + increment, 0);\n  }\n\n  getNextChar(lineState, increment) {\n    const label = this.getLabel();\n    const {alignment, space} = this.props;\n    const offset = (()=>{\n      if (alignment === 'column' && increment > 0) {\n        const {char} = readLastChar(lineState) || {};\n        if (char === space) {\n          return this.getNextOffsetByColumn(lineState, increment);\n        }\n      }\n      return this.getNextOffset(lineState, increment);\n    })();\n    const char = indexLabel(label, offset);\n    return this.newChar({offset, char});\n  }\n\n  getLastLine(lines) {\n    return lines.slice(-1)[0] || this.newLine();\n  }\n\n  getRatios(elWidth, lineIdx) {\n    const maxLines = this.getMaxLines();\n    const {width} = this.getShape();\n    return {\n      widthRatio: elWidth / width,\n      heightRatio: (lineIdx + 0.5) / maxLines\n    };\n  }\n\n  checkRatios(elWidth, lineIdx) {\n    const {widthRatio, heightRatio} = this.getRatios(elWidth, lineIdx);\n    if (widthRatio > 1 || heightRatio > 1) {\n      return false;\n    }\n    return true;\n  }\n\n  readMask(input) {\n    const {readMaskPixel, readMaskShape} = this.props;\n    const {lineState, lineIdx} = input;\n    const {elWidth} = lineState;\n    if (!this.checkRatios(elWidth, lineIdx)) {\n      return null;\n    }\n    const ratios = this.getRatios(elWidth, lineIdx);\n    const [maskWidth, maskHeight] = readMaskShape();\n    const {widthRatio, heightRatio} = ratios;\n\n    // Convert element coords to mask coords\n    const x = Math.floor(widthRatio * maskWidth);\n    const y = Math.floor(heightRatio * maskHeight);\n\n    // Return correct character\n    if (readMaskPixel(x,y)) {\n      const {space} = this.props;\n      return this.newChar({\n        offset: this.getNextOffset(lineState, 0),\n        char: space\n      });\n    }\n    return this.getNextChar(lineState, 1);\n  }\n\n  addCharToLine(input, i) {\n    if (input.done) {\n      return input;\n    }\n\n    const {lineState, hiddenChars} = input;\n    if (hiddenChars.length > 0 && lineState.line.length > 0) {\n      return {\n        ...input,\n        done: true,\n        lineState: {\n          ...lineState,\n          line: lineState.line.concat([\n            hiddenChars.slice(-1)[0]\n          ]),\n        },\n        hiddenChars: hiddenChars.slice(0,-1)\n      };\n    }\n\n    const nextChar = this.readMask(input);\n    if (nextChar === null) {\n      return input;\n    }\n    const {char} = nextChar;\n    const {lineIdx, iMax} = input;\n    const {elWidth} = lineState;\n    const {widthMap} = this.state;\n    const charWidth = widthMap.get(char) || 0;\n    const nextWidth = elWidth + charWidth;\n    const inBounds = this.checkRatios(nextWidth, lineIdx);\n    if (!inBounds) {\n      return {\n        ...input,\n        done: true\n      }\n    }\n\n    const done = [\n      i === iMax, // final character estimate\n      charWidth < 1 // no valid character estimate\n    ].some(x=>x);\n\n    return {\n      ...input,\n      lineState: {\n        ...lineState,\n        line: lineState.line.concat([nextChar]),\n        elWidth: (done ? elWidth : nextWidth)\n      },\n      done\n    };\n  }\n\n  addCharsToLine(input, lineState, lineIdx) {\n    const {num, lines, hiddenChars} = input;\n    // Line is ready to go\n    if (!this.canLineRender(lineState)) {\n      return input;\n    }\n\n    const numRange = [...Array(num).keys()];\n    const output = numRange.reduce(this.addCharToLine, {\n      iMax: num - 1, done: false, lineState, lineIdx,\n      hiddenChars: hiddenChars\n    });\n\n    return {\n      ...input,\n      allReady: false,\n      hiddenChars: output.hiddenChars,\n      lines: constListReplace(lines, lineIdx, output.lineState),\n    };\n  }\n\n  listHiddenChars() {\n    const {space} = this.props;\n    const label = this.getLabel();\n    const {widthMap} = this.state;\n    const neededChars = label.split('').concat([space]);\n    return neededChars.reduce((hiddenLine, char) => {\n      if (widthMap.has(char)) {\n        return hiddenLine;\n      }\n      return [\n        this.newChar({\n          char: char,\n          offset: -1\n        }),\n        ...hiddenLine\n      ];\n    }, []);\n  }\n\n  onColumnUpdate() {\n    return new Promise((resolve) => {\n      const {lines} = this.state;\n      const output = lines.reduce(this.addCharsToLine, {\n        hiddenChars: this.listHiddenChars(),\n        num: this.props.stepSize,\n        allReady: true,\n        lines\n      });\n\n      if (output.allReady) {\n        return this.setState({\n          canRender: false,\n        }, resolve);\n      }\n      return this.setState({\n        canRender: true,\n        lines: output.lines,\n      }, resolve);\n    });\n  }\n\n  updateLine(lineState, elWidth) {\n    const {width} = this.getShape();\n    const {numRenders} = lineState;\n    const {offset} = readLastChar(lineState) || {\n      offset: 0\n    };\n    // If at end of line or hidden character\n    if (elWidth > width || offset < 0) {\n      // We will measure a negative element width\n      return {\n        ...lineState,\n        line: lineState.line.slice(0, -1),\n        elWidthDiff: lineState.elWidth - elWidth\n      };\n    }\n    return {\n      ...lineState,\n      elWidth: elWidth,\n      numRenders: numRenders + 1,\n      elWidthDiff: elWidth - lineState.elWidth\n    };\n  }\n\n  onLineUpdate(id, elWidth) {\n    return new Promise((resolve) => {\n      const {lines, widthMap} = this.state;\n      if (id < lines.length) {\n        const {char} = readLastChar(lines[id]) || {};\n        const lineState = this.updateLine(lines[id], elWidth);\n        const {elWidthDiff} = lineState;\n        this.setState({\n          widthMap: copyWidthMap(widthMap, char, elWidthDiff),\n          lines: constListReplace(lines, id, lineState),\n          canRender: false\n        }, resolve);\n      }\n    });\n  }\n\n  enqueueLineUpdate(id, elWidth) {\n    this.lineQueue.then(async () => {\n      return await this.onLineUpdate(id, elWidth);\n    })\n  }\n\n  canLineRender(lineState) {\n    if (!lineState) {\n      return false;\n    }\n    const {numRenders, elWidthDiff} = lineState;\n    const endReached = (\n      numRenders >= 2 && (elWidthDiff === 0)\n    );\n    return !endReached;\n  }\n\n  // debounced\n  async updateShape() {\n    const newState = {};\n    const oldShape = this.getShape();\n    const {maxWidth, maxHeight, fontSize} = this.state;\n    const {innerWidth, innerHeight} = window;\n\n    if (!sameFloor(maxWidth, innerWidth)) {\n      newState.maxWidth = Math.floor(innerWidth);\n    }\n    if (!sameFloor(maxHeight, innerHeight)) {\n      newState.maxHeight = Math.floor(innerHeight);\n    }\n    this.setState(newState, async () => {\n      const {height, width} = this.getShape();\n      // No need to redraw output if the shape has not changed\n      if (oldShape.height === height && oldShape.width === width) {\n        return;\n      }\n      await this.lineQueue;\n      const numLines = Math.floor(height / fontSize);\n      this.setState({\n        canRender: true,\n        lines: makeNewLines(numLines)\n      });\n    });\n  }\n\n  // debounced\n  async resetLines() {\n    const {lines} = this.state;\n    await this.lineQueue;\n    this.setState({\n      canRender: true,\n      lines: makeNewLines(lines.length)\n    });\n  }\n\n  async componentDidMount() {\n    window.addEventListener('resize', async() => {\n      await this.updateShape();\n    });\n    await this.onColumnUpdate();\n  }\n\n  async componentDidUpdate() {\n    //await sleep(1); //sleep helps debug in dev mode\n    await this.lineQueue;\n    await this.onColumnUpdate();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const propsList = [\n      'alignment', 'label', 'space', 'stepSize'\n    ]\n    // Redraw completely if props change\n    const mustReset = propsList.map((p)=> {\n      return this.props[p] !== nextProps[p];\n    }).some(x => !!x);\n    if (mustReset) {\n      this.resetLines();\n      return false;\n    }\n    const {canRender} = nextState;\n    return canRender;\n  }\n\n  render() {\n    const {fontSize} = this.state;\n    const {lines} = this.state;\n    const {width, height} = this.getShape();\n\n    const outlineStyle = {\n      fontSize: `${fontSize}px`,\n    };\n    const centerStyle = {\n      'width': `${width}px`,\n      'height': `${height}px`\n    };\n\n    const outline = (\n      <div style={outlineStyle} className={styles.outline}>\n        {lines.map((lineState, i) => {\n          const lineStyle ={\n            top: i * fontSize\n          };\n          return (\n            <OutputLine enqueueLineUpdate={this.enqueueLineUpdate}\n              canRender={this.canLineRender(lineState)}\n              stl={lineStyle} cls={styles.line} key={i} id={i}\n            >\n              {lineState.line.map(({char}, ii) => {\n                return (\n                  <OutputChar key={ii}>\n                    {char}\n                  </OutputChar>\n                );\n              })}\n            </OutputLine>\n          );\n        })}\n      </div>\n    );\n    return (\n      <div className={styles.grid}>\n        <div></div>\n        <div style={centerStyle}>\n          {outline}\n        </div>\n        <div></div>\n      </div>\n    )\n  }\n}\nexport default Output;\n","import React, { Component } from 'react';\nimport Output from './Output.js';\n\nclass UrlOutput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.missing = [\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,0,0,0,0,0,0,0],\n    ];\n    this.readMaskPixel = this.readMaskPixel.bind(this);\n    this.readMaskShape = this.readMaskShape.bind(this);\n  }\n\n  readMaskPixel(x,y) {\n    return !!this.missing[y][x];\n  }\n\n  readMaskShape() {\n    return [\n      this.missing[0].length, \n      this.missing.length\n    ];\n  }\n\n  render() {\n    const {alignment} = this.props;\n    return (\n      <Output space=' ' stepSize={100}\n        readMaskShape={this.readMaskShape}\n        readMaskPixel={this.readMaskPixel}\n        alignment={alignment}\n        label='Missing url! '\n      >\n      </Output>\n    )\n  }\n}\nexport default UrlOutput;\n","import React, { Component } from 'react';\nimport {Pokedex} from 'pokeapi-js-wrapper';\nimport Output from './Output.js';\nimport {\n  constMapInsert, constListReplace\n} from '../functions/ConstUpdaters';\n\nconst GENERATIONS = [\n  '','i','ii','iii','iv','v','vi','vii','viii', // as of 2021\n  'ix', 'x', 'xi', 'xii', 'xiii', 'xiv', 'xv', // until ~2042\n  'xvi', 'xvii', 'xviii', 'xix', 'xx', 'xxi' // until ~2060\n];\n\nconst parseLangList = (list, property) => {\n  const extractor = (langMap, lang) => {\n    const value = lang[property];\n    const {language} = lang;\n    const key = language.name;\n    if (key && value) {\n      langMap.set(key, value);\n    }\n    return langMap;\n  }\n  return list.reduce(extractor, new Map([]));\n}\n\nconst parseGeneration = (generation) => {\n  const roman = generation.split('-').slice(-1)[0].toLowerCase();\n  return GENERATIONS.indexOf(roman) || 0;\n}\n\nclass Pokemon {\n  constructor(params) {\n    const {name, id, names, genera, varieties} = params;\n    this.id = id;\n    this.name = name;\n    this.nameLangMap = parseLangList(names, 'name');\n    this.genusLangMap = parseLangList(genera, 'genus');\n    this.hasGenderDiff = params.has_gender_differences || false;\n    this.hasGender = (params.gender_rate || 0) !== -1;\n    this.generation = parseGeneration(params.generation?.name || '');\n    // Each pokemon species may have multiple varieties\n    const {vMap, vDefault} = varieties.reduce((result, variety) => {\n      const value = variety.pokemon || {};\n      if (value.name) {\n        if (variety.is_default) {\n          result.vDefault = value.name;\n        }\n        result.vMap.set(value.name, {\n          // Each variety may have many sprites\n          sprites: []\n        });\n      }\n      return result;\n    }, {\n      vDefault: null,\n      vMap: new Map([])\n    });\n    this.varietyMap = vMap;\n    this.varietyDefault = vDefault;\n  }\n  getName(lang) {\n    return this.nameLangMap.get(lang) || this.name;\n  }\n  getGenus(lang) {\n    return this.genusLangMap.get(lang) || null;\n  }\n\n  newSpriteList(sprite, label, url) {\n    const splitLabel = label.split('_');\n    const [side, gender] = splitLabel;\n    if (splitLabel.length !== 2 || !url) {\n      return [];\n    }\n    // ignore shiny or grayscale sprites\n    if (['shiny', 'gray'].includes(gender)) {\n      return [];\n    }\n    return [{\n      ...sprite,\n      gender: {\n        'default': this.hasGender ? 'male' : 'none'\n      }[gender] || gender,\n      canvas: null,\n      side: side,\n      url: url\n    }];\n  }\n\n  parseSpriteData(spriteData) {\n    return Object.entries(spriteData).reduce((l0, [k0, v0])=>{\n      if (k0 === 'other') {\n        return Object.entries(v0 || {}).reduce((l1, [k1, v1]) => {\n          return Object.entries(v1 || {}).reduce((l2, [k2, v2]) => {\n            return l2.concat(this.newSpriteList({\n                generation: {\n                  'dream_world': 5\n                }[k1] || this.generation,\n                source: k1\n              }, k2, v2\n            ));\n          }, l1);\n        }, l0);\n      }\n      else if (k0 === 'versions') {\n        return Object.entries(v0 || {}).reduce((l1, [k1, v1]) => {\n          return Object.entries(v1 || {}).reduce((l2, [k2, v2]) => {\n            return Object.entries(v2 || {}).reduce((l3, [k3, v3]) => {\n              if (k2 === 'icons') {\n                return l3;\n              }\n              return l3.concat(this.newSpriteList({\n                  generation: parseGeneration(k1),\n                  source: k2\n                }, k3, v3\n              ));\n            }, l2);\n          }, l1);\n        }, l0);\n      }\n      return l0.concat(this.newSpriteList({\n          generation: 0,\n          source: 'default'\n        }, k0, v0\n      ));\n    },[]).sort((...ab) => {\n      const sortChoices = (items, key, choices=null) => {\n        return () => {\n          const [a,b] = items.slice(0,2).map((item) => {\n            if (choices === null) {\n              return item[key];\n            }\n            const choiceIndex = choices.indexOf(item[key]);\n            return choiceIndex !== -1 ? choiceIndex : choices.length;\n          });\n          return a - b;\n        }\n      }\n      const functions = [\n        sortChoices(ab, 'side', [\n          'front', 'back'\n        ]),\n        sortChoices(ab, 'source', [\n          'official-artwork', 'dream_world', 'default'\n        ]),\n        sortChoices(ab, 'generation', null),\n        sortChoices(ab, 'gender', [\n          'none', 'female', 'male'\n        ]),\n      ]\n      for (let fn of functions) {\n        const diff = fn();\n        if (diff !== 0) {\n          return diff;\n        }\n      }\n      return 0;\n    });\n  }\n\n  setSprites(variety, sprites) {\n    this.varietyMap = constMapInsert(this.varietyMap, variety, {\n      sprites: sprites\n    });\n  }\n\n  getSprites(variety) {\n    const varietyState = this.varietyMap.get(variety) || {};\n    return varietyState.sprites || [];\n  }\n\n  getSprite(variety, index=0) {\n    return this.getSprites(variety)[index] || null;\n  }\n\n  loadSprite(variety, index=0) {\n    return new Promise((resolve, reject) => {\n      const sprite = this.getSprite(variety, index=0) || {};\n      const {url} = sprite;\n      if (!url) {\n        reject({url: ''});\n      }\n      const spriteImage = new Image();\n      spriteImage.crossOrigin = \"Anonymous\";\n      spriteImage.onload = () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = spriteImage.width;\n        canvas.height = spriteImage.height;\n        canvas.getContext('2d').drawImage(spriteImage,0,0);\n\n        const sprites = constListReplace(this.getSprites(variety), index, {\n          ...sprite,\n          canvas: canvas\n        })\n        this.setSprites(variety, sprites);\n        resolve(sprite);\n      };\n      spriteImage.onerror = () => {\n        reject({url});\n      }\n      \n      spriteImage.src = url; \n    });\n  }\n\n  readSpriteMaskPixel(variety, index=0, x, y) {\n    const {canvas} = this.getSprite(variety, index) || {};\n    if (!canvas) {\n      return false;\n    }\n    const context = canvas.getContext('2d');\n    const {data} = context.getImageData(x, y, 1, 1) || {};\n    if (!data) {\n      return false;\n    }\n    // Truee if greater than half alpha\n    return data[3] >= 127;\n  }\n}\n\nconst makeEmptyPokemon = () => {\n  return new Pokemon({\n    id: 0,\n    name: '',\n    names: [\n      {\"language\":{\"name\":\"de\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"en\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"es\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"fr\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"it\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"ja\"},\"name\":\"けつばん\"},\n      {\"language\":{\"name\":\"ja-Hrkt\"},\"name\":\"けつばん\"},\n      {\"language\":{\"name\":\"ko\"},\"name\":\"미싱노\"},\n      {\"language\":{\"name\":\"roomaji\"},\"name\":\"Ketsuban\"},\n      {\"language\":{\"name\":\"zh-Hans\"},\"name\":\"MissingNo.\"},\n      {\"language\":{\"name\":\"zh-Hant\"},\"name\":\"MissingNo.\"}\n    ],\n    genera: [],\n    varieties: [],\n    gender_rate: -1,\n    generation: 'i',\n    has_gender_differences: false\n  });\n}\n\nconst parseAbsoluteInteger = (v, alt=null) => {\n  return ((i)=> !isNaN(i) ? Math.abs(i) : alt)(parseInt(v));\n}\n\nfunction DexException(message) {\n  this.message = message;\n  this.name = 'DexException';\n}\n\nclass DexOutput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lang: 'en',\n      variety: null,\n      invalid: false,\n      spriteIndex: 0,\n      pokemon: makeEmptyPokemon()\n    };\n    this.dex = new Pokedex();\n    this.missing = [\n      [0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,0,0,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,1,1,1,1,1,0,0],\n      [0,0,0,0,0,0,0,0,0],\n    ];\n    this.readMaskPixel = this.readMaskPixel.bind(this);\n    this.readMaskShape = this.readMaskShape.bind(this);\n  }\n\n  componentDidMount() {\n    const {n} = this.props;\n    const {spriteIndex} = this.state;\n    // This call is non-blocking\n    this.loadPokemon(n, spriteIndex);\n  }\n\n  componentDidUpdate() {\n    const {n} = this.props;\n    const {spriteIndex} = this.state;\n    // This call is non-blocking\n    this.loadPokemon(n, spriteIndex);\n  }\n\n  async loadPokemon(n0, spriteIndex) {\n    let mon0 = undefined;\n    let mon1 = undefined;\n    const nNumber = parseAbsoluteInteger(n0, NaN);\n    const isZero = nNumber === 0;\n    const isEmpty = n0.length === 0;\n    try {\n      if (isEmpty) {\n        throw new DexException('No species name or dex number!');\n      }\n      if (isZero) {\n        throw new DexException('Invalid dex number!');\n      }\n      const nameOrNumber = isNaN(nNumber)? n0.toLowerCase() : nNumber;\n      mon0 = await this.dex.getPokemonSpeciesByName(nameOrNumber);\n    }\n    catch (e0) {\n      console.error(e0)\n    }\n    if (mon0) {\n      const pokemon = new Pokemon(mon0);\n      const variety = pokemon.varietyDefault || pokemon.name;\n      try {\n        mon1 = await this.dex.getPokemonByName(variety);\n      }\n      catch (e1) {\n        console.error(e1); \n      }\n      if (mon1) {\n        pokemon.setSprites(variety, pokemon.parseSpriteData(mon1.sprites)) \n      }\n      try {\n        await pokemon.loadSprite(variety, spriteIndex)\n        this.props.setSpeciesName(pokemon.getName(this.state.lang))\n        this.props.setSpeciesIndex(pokemon.id)\n        this.setState({\n          invalid: false,\n          pokemon: pokemon,\n          variety: variety\n        });\n      }\n      catch (badSprite) {\n        const url = badSprite.url || '';\n        const msg = (!url.length)? 'No url!' : `Invalid url: ${url}`;\n        console.error(msg);\n        this.setState({\n          invalid: true\n        })\n      }\n    }\n  }\n\n  spriteCall(fn) {\n    const {pokemon, variety, spriteIndex} = this.state;\n    return fn({\n      p: pokemon,\n      v: variety,\n      s: spriteIndex\n    });\n  }\n\n  readMaskPixel(x,y) {\n    const {canvas} = this.spriteCall(({p,v,s}) => {\n      const sprite = p.getSprite(v,s) || {};\n      return sprite;\n    });\n    if (!canvas) {\n      return !!this.missing[y][x];\n    }\n    return this.spriteCall(({p,v,s}) => {\n      return p.readSpriteMaskPixel(v,s,x,y);\n    });\n  }\n\n  readMaskShape() {\n    const {canvas} = this.spriteCall(({p,v,s}) => {\n      return p.getSprite(v,s) || {};\n    });\n    if (!canvas) {\n      return [\n        this.missing[0].length, \n        this.missing.length\n      ];\n    }\n    return [canvas.width, canvas.height];\n  }\n\n  render() {\n    const {lang} = this.state;\n    const {alignment} = this.props;\n    const label = this.spriteCall(({p}) => {\n      return p.getName(lang) || 'DEX ERR ';\n    });\n\n    return (\n      <Output space=' ' stepSize={100}\n        readMaskShape={this.readMaskShape}\n        readMaskPixel={this.readMaskPixel}\n        alignment={alignment}\n        label={label}\n      >\n      </Output>\n    )\n  }\n}\nexport default DexOutput;\n","import React, {useState} from \"react\";\nimport {\n  BrowserRouter as Router,\n  useLocation,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport UrlOutput from './UrlOutput.js';\nimport DexOutput from './DexOutput.js';\n\n// Query parameter parsers\nconst parseBoolean = (v, f=false, t=true) => {\n  return v == null ? f: t;\n}\nconst parseAnyString = (v, alt=null) => {\n  return [null, ''].includes(v) ? alt : v;\n}\n\nconst useQuery = (parsers) => {\n  const query = new URLSearchParams(useLocation().search);\n  // Basically accept any value that doesn't parse as null\n  return Object.entries(parsers).reduce((result, [key, parser]) => {\n    const value = parser(query.get(key));\n    if (value !== null) {\n      result[key] = value;\n    }\n    return result; \n  }, {});\n}\n\nconst configureProps = (props) => {\n  // The slug defines the header and valid query parameters\n  return (({slug}) => {\n    const parsers = {\n      'row': (v) => parseBoolean(v, 'column', 'row') \n    };\n    if (slug[0] === 'dex') {\n      return {\n        navigation: 'dex',\n        parsers: {\n          ...parsers,\n          'n': parseAnyString\n        }\n      };\n    }\n    return {\n      navigation: 'home',\n      parsers: {\n        ...parsers,\n        'url': (v) => parseAnyString(v)\n      }\n    };\n  })(props);\n}\n\nfunction RenderOutput(props) {\n  const [speciesIndex, setSpeciesIndex] = useState(NaN);\n  const [speciesName, setSpeciesName] = useState('Loading...');\n\n  const config = configureProps(props);\n  config.query = useQuery(config.parsers);\n  // Configure the navigation\n  const header = (({navigation, query}) => {\n    const lastPokemon = 898;\n    if (navigation === 'dex') {\n      const nullPokemon = isNaN(speciesIndex);\n      const prefix = nullPokemon? `#???` : `#${speciesIndex}`;\n      const nextIndex = nullPokemon? 1 : (\n        Math.max(1, (speciesIndex + 1) % (lastPokemon + 1))\n      );\n      const next = `/dex?n=${nextIndex}`;\n      return (\n        <div>\n          Current Pokémon: {prefix} {speciesName}\n          ...\n          Next Pokémon:  <Link to={next}>#{nextIndex}</Link>\n        </div>\n      );\n    }\n    const randomIndex = Math.ceil(Math.random() * lastPokemon);\n    const random = `/dex?n=${randomIndex}`;\n    return (\n      <div>\n        Try this Pokémon: <Link to={random}>#{randomIndex}</Link>\n      </div>\n    );\n  })(config);\n\n  // Configure the main output\n  const output = ((input) => {\n    const {query, navigation} = input;\n    const alignment = query.row;\n\n    if (navigation === 'dex') {\n      const {n} = query;\n      return (\n        <DexOutput alignment={alignment}\n          setSpeciesIndex={setSpeciesIndex}\n          setSpeciesName={setSpeciesName}\n          n={n || ''}\n        ></DexOutput>\n      );\n    }\n    const {url} = query;\n    return (\n      <UrlOutput alignment={alignment}\n        url={url || ''}\n      ></UrlOutput>\n    );\n  })(config);\n\n  return (\n    <div>\n      <div>\n        {header}\n      </div>\n      <div>\n        {output}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/dex\">\n            <RenderOutput slug={['dex']}>\n            </RenderOutput>\n          </Route>\n          <Route path=\"/\">\n            <RenderOutput slug={[]}>\n            </RenderOutput>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}